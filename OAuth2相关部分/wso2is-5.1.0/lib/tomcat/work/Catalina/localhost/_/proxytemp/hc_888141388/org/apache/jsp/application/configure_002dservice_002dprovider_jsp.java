/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.59
 * Generated at: 2016-06-23 16:02:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.application;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.axis2.context.ConfigurationContext;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.identity.application.common.model.xsd.IdentityProvider;
import org.wso2.carbon.identity.application.common.model.xsd.LocalAuthenticatorConfig;
import org.wso2.carbon.identity.application.common.model.xsd.ProvisioningConnectorConfig;
import org.wso2.carbon.identity.application.common.model.xsd.RequestPathAuthenticatorConfig;
import org.wso2.carbon.identity.application.mgt.ui.ApplicationBean;
import org.wso2.carbon.identity.application.mgt.ui.client.ApplicationManagementServiceClient;
import org.wso2.carbon.identity.application.mgt.ui.util.ApplicationMgtUIUtil;
import org.wso2.carbon.ui.CarbonUIMessage;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.wso2.carbon.utils.ServerConstants;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.owasp.encoder.Encode;
import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig;
import org.wso2.carbon.identity.application.common.model.xsd.Property;
import org.apache.commons.collections.CollectionUtils;
import java.util.ArrayList;

public final class configure_002dservice_002dprovider_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1449834356000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1449834356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write("~ Copyright (c) 2005-2013, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n");
      out.write("~\n");
      out.write("~ WSO2 Inc. licenses this file to you under the Apache License,\n");
      out.write("~ Version 2.0 (the \"License\"); you may not use this file except\n");
      out.write("~ in compliance with the License.\n");
      out.write("~ You may obtain a copy of the License at\n");
      out.write("~\n");
      out.write("~    http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("~\n");
      out.write("~ Unless required by applicable law or agreed to in writing,\n");
      out.write("~ software distributed under the License is distributed on an\n");
      out.write("~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n");
      out.write("~ KIND, either express or implied.  See the License for the\n");
      out.write("~ specific language governing permissions and limitations\n");
      out.write("~ under the License.\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link href=\"css/idpmgt.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\"/>\n");
      //  carbon:breadcrumb
      org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
      _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
      _jspx_th_carbon_005fbreadcrumb_005f0.setParent(null);
      // /application/configure-service-provider.jsp(44,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("breadcrumb.service.provider");
      // /application/configure-service-provider.jsp(44,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.identity.application.mgt.ui.i18n.Resources");
      // /application/configure-service-provider.jsp(44,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(true);
      // /application/configure-service-provider.jsp(44,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
      int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
      if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../dialog/display_messages.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../identity/validation/js/identity-validate.js\"></script>\n");
      out.write("\n");
      out.write("\n");

ApplicationBean appBean = ApplicationMgtUIUtil.getApplicationBeanFromSession(session, request.getParameter("spName"));
if (appBean.getServiceProvider() == null || appBean.getServiceProvider().getApplicationName() == null) {
// if appbean is not set properly redirect the user to list-service-provider.jsp.

      out.write("\n");
      out.write("<script>\n");
      out.write("location.href = \"list-service-providers.jsp\";\n");
      out.write("</script>\n");

	return;
}
	String spName = appBean.getServiceProvider().getApplicationName();
	
	List<String> permissions = null;		
	permissions = appBean.getPermissions();
	
	String[] allClaimUris = appBean.getClaimUris();	
	Map<String, String> claimMapping = appBean.getClaimMapping();
	Map<String, String> roleMapping = appBean.getRoleMapping();
	boolean isLocalClaimsSelected = appBean.isLocalClaimsSelected();
    String idPName = request.getParameter("idPName");
    String action = request.getParameter("action");
    String[] userStoreDomains = null;
    boolean isNeedToUpdate = false;

    String authTypeReq =  request.getParameter("authType");
    if (authTypeReq!=null && authTypeReq.trim().length()>0){
    	appBean.setAuthenticationType(authTypeReq);
    }

    String samlIssuerName = request.getParameter("samlIssuer");


    if (samlIssuerName != null && "update".equals(action)){
    	appBean.setSAMLIssuer(samlIssuerName);
    	isNeedToUpdate = true;
    }
    
    if (samlIssuerName != null && "delete".equals(action)){
    	appBean.deleteSAMLIssuer();
        isNeedToUpdate = true;
    }

	samlIssuerName = appBean.getSAMLIssuer();


	String kerberosServicePrinciple = request.getParameter("kerberos");


	if (kerberosServicePrinciple != null && "update".equals(action)){
		appBean.setKerberosServiceName(kerberosServicePrinciple);
		isNeedToUpdate = true;
	}

	if (kerberosServicePrinciple != null && "delete".equals(action)){
		appBean.deleteKerberosApp();
		isNeedToUpdate = true;
	}


    String attributeConsumingServiceIndex = request.getParameter("attrConServIndex");
	if(attributeConsumingServiceIndex != null){
		appBean.setAttributeConsumingServiceIndex(attributeConsumingServiceIndex);
	}
    
    String oauthapp = request.getParameter("oauthapp");
    
    if (oauthapp!=null && "update".equals(action)){
    	appBean.setOIDCAppName(oauthapp);
    	isNeedToUpdate = true;
    }
    
    if (oauthapp!=null && "delete".equals(action)){
    	appBean.deleteOauthApp();
        isNeedToUpdate = true;
    }
    
    String oauthConsumerSecret = null;
    
    if(session.getAttribute("oauth-consum-secret")!= null && "update".equals(action)){
    	oauthConsumerSecret = (String) session.getAttribute("oauth-consum-secret");
    	appBean.setOauthConsumerSecret(oauthConsumerSecret);
    	session.removeAttribute("oauth-consum-secret");
    }
    
    oauthapp = appBean.getOIDCClientId();
   
    String wsTrust = request.getParameter("serviceName");
    
    if (wsTrust != null && "update".equals(action)){
    	appBean.setWstrustEp(wsTrust);
    	isNeedToUpdate = true;
    }
    
    if (wsTrust != null && "delete".equals(action)){
    	appBean.deleteWstrustEp();
        isNeedToUpdate = true;
    }
    
    wsTrust  = appBean.getWstrustSP();
    
    String display = request.getParameter("display");
    
    
    if(idPName != null && idPName.equals("")){
        idPName = null;
    }

    if(ApplicationBean.AUTH_TYPE_FLOW.equals(authTypeReq) && "update".equals(action)) {
        isNeedToUpdate = true;
    }
    
    String authType = appBean.getAuthenticationType();

	StringBuffer localAuthTypes = new StringBuffer();
	String startOption = "<option value=\"";
	String middleOption = "\">";
	String endOPtion = "</option>";
    
	StringBuffer requestPathAuthTypes = new StringBuffer();
	RequestPathAuthenticatorConfig[] requestPathAuthenticators = appBean.getRequestPathAuthenticators();

	if (requestPathAuthenticators!=null && requestPathAuthenticators.length>0){
		for(RequestPathAuthenticatorConfig reqAuth : requestPathAuthenticators) {
			requestPathAuthTypes.append(startOption + Encode.forHtmlAttribute(reqAuth.getName()) + middleOption + Encode.forHtmlContent(reqAuth.getDisplayName()) + endOPtion);
		}
	}
	
	Map<String, String> idpAuthenticators = new HashMap<String, String>();
	IdentityProvider[] federatedIdPs = appBean.getFederatedIdentityProviders();
	Map<String, String> proIdpConnector = new HashMap<String, String>();
	Map<String, String> enabledProIdpConnector = new HashMap<String, String>();
	Map<String, String> selectedProIdpConnectors = new HashMap<String, String>();
	Map<String, Boolean> idpStatus = new HashMap<String, Boolean>();
	Map<String, Boolean> IdpProConnectorsStatus = new HashMap<String, Boolean>();

	StringBuffer idpType = null;
	StringBuffer connType = null;
	StringBuffer enabledConnType = null;

	if (federatedIdPs!=null && federatedIdPs.length>0) {
		idpType = new StringBuffer();
		StringBuffer provisioningConnectors = null;
		for(IdentityProvider idp : federatedIdPs) {
			idpStatus.put(idp.getIdentityProviderName(), idp.getEnable());
			if (idp.getProvisioningConnectorConfigs()!=null && idp.getProvisioningConnectorConfigs().length>0){
				ProvisioningConnectorConfig[] connectors =  idp.getProvisioningConnectorConfigs();
				int i = 1;
				connType = new StringBuffer();
				enabledConnType = new StringBuffer();
				provisioningConnectors = new StringBuffer();
				for (ProvisioningConnectorConfig proConnector : connectors){
					if (i == connectors.length ){
						provisioningConnectors.append(proConnector.getEnabled() ? proConnector.getName() : "");
					} else {
						provisioningConnectors.append(proConnector.getEnabled() ? proConnector.getName() + "," : "");
					}
					connType.append(startOption + Encode.forHtmlAttribute(proConnector.getName()) + middleOption + Encode.forHtmlContent(proConnector.getName()) + endOPtion);
					if(proConnector.getEnabled()){
						enabledConnType.append(startOption + Encode.forHtmlAttribute(proConnector.getName()) + middleOption + Encode.forHtmlContent(proConnector.getName()) + endOPtion);
					}
					IdpProConnectorsStatus.put(idp.getIdentityProviderName()+"_"+proConnector.getName(), proConnector.getEnabled());
					i++;
				}
				proIdpConnector.put(idp.getIdentityProviderName(), connType.toString());
				if(idp.getEnable()){
					enabledProIdpConnector.put(idp.getIdentityProviderName(), enabledConnType.toString());
					idpType.append(startOption + Encode.forHtmlAttribute(idp.getIdentityProviderName()) + "\" data=\""+Encode.forHtmlAttribute(provisioningConnectors.toString()) + "\" >" + Encode.forHtmlContent(idp.getIdentityProviderName()) + endOPtion);
				}
			} 
		}
		
		if (appBean.getServiceProvider().getOutboundProvisioningConfig() != null
				&& appBean.getServiceProvider().getOutboundProvisioningConfig() .getProvisioningIdentityProviders()!=null
			&& appBean.getServiceProvider().getOutboundProvisioningConfig() .getProvisioningIdentityProviders().length>0) {

            IdentityProvider[]  proIdps = appBean.getServiceProvider().getOutboundProvisioningConfig() .getProvisioningIdentityProviders();
		    for (IdentityProvider idp : proIdps){
				ProvisioningConnectorConfig proIdp = idp.getDefaultProvisioningConnectorConfig();
				String options = proIdpConnector.get(idp.getIdentityProviderName());
				if (proIdp!=null && options != null) {
					String oldOption = startOption + Encode.forHtmlAttribute(proIdp.getName()) + middleOption + Encode.forHtmlContent(proIdp.getName()) + endOPtion;
					String newOption = startOption + Encode.forHtmlAttribute(proIdp.getName()) + "\" selected=\"selected" + middleOption + Encode.forHtmlContent(proIdp.getName()) + endOPtion;
					if(options.contains(oldOption)) {
						options = options.replace(oldOption, newOption);
					} else {
						options = options + newOption;
					}
					selectedProIdpConnectors.put(idp.getIdentityProviderName(), options);
				} else {
					options = enabledProIdpConnector.get(idp.getIdentityProviderName());
					selectedProIdpConnectors.put(idp.getIdentityProviderName(), options);
				}
				
			}
		}
		
	}
	try {
		String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);
		String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);
		ConfigurationContext configContext = (ConfigurationContext) config.getServletContext()
		                                                                  .getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);
		ApplicationManagementServiceClient serviceClient = new ApplicationManagementServiceClient(cookie, backendServerURL, configContext);
		userStoreDomains = serviceClient.getUserStoreDomains();
	} catch (Exception e) {
		CarbonUIMessage.sendCarbonUIMessage("Error occured while loading User Store Domail", CarbonUIMessage.ERROR, request, e);
	}

      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("\n");
 if(claimMapping != null) {
      out.write("\n");
      out.write("var claimMappinRowID = ");
      out.print(claimMapping.size() -1 );
      out.write(';');
      out.write('\n');
} else {
      out.write("\n");
      out.write("var claimMappinRowID = -1;\n");
}
      out.write("\n");
      out.write("\n");
      out.write("var reqPathAuth = 0;\n");
      out.write("\n");
if(appBean.getServiceProvider().getRequestPathAuthenticatorConfigs() != null){
      out.write("\n");
      out.write("var reqPathAuth = ");
      out.print(appBean.getServiceProvider().getRequestPathAuthenticatorConfigs().length);
      out.write(';');
      out.write('\n');
} else {
      out.write("\n");
      out.write("var reqPathAuth = 0;\n");
}
      out.write('\n');
      out.write('\n');
 if(roleMapping != null) {
      out.write("\n");
      out.write("var roleMappinRowID = ");
      out.print(roleMapping.size() -1 );
      out.write(';');
      out.write('\n');
 } else { 
      out.write("\n");
      out.write("var roleMappinRowID = -1;\n");
 } 
      out.write("\n");
      out.write("\n");
      out.write("\tfunction createAppOnclick() {\n");
      out.write("\t\tvar spName = document.getElementById(\"spName\").value;\n");
      out.write("\t\tif( spName == '') {\n");
      out.write("\t\t\tCARBON.showWarningDialog('");
      if (_jspx_meth_fmt_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("\t\t\tlocation.href = '#';\n");
      out.write("\t\t} else if (!validateTextForIllegal(document.getElementById(\"spName\"))) {\n");
      out.write("                        return false;\n");
      out.write("                } else {\n");
      out.write("\t\t\tif($('input:radio[name=claim_dialect]:checked').val() == \"custom\")\n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tvar isValied = true;\n");
      out.write("\t\t\t\t$.each($('.spClaimVal'), function(){\n");
      out.write("\t\t\t\t\tif($(this).val().length == 0){\n");
      out.write("\t\t\t\t\t\tisValied = false;\n");
      out.write("\t\t\t\t\t\tCARBON.showWarningDialog('Please complete Claim Configuration section');\n");
      out.write("\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t}\t\t\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\tif(!isValied){\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// number_of_claimmappings\n");
      out.write("\t\t\tvar numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
      out.write("\t\t\tdocument.getElementById('number_of_claimmappings').value=numberOfClaimMappings;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($('[name=app_permission]').length > 0){\n");
      out.write("\t\t\t\tvar isValied = true;\n");
      out.write("\t\t\t\t$.each($('[name=app_permission]'), function(){\n");
      out.write("\t\t\t\t\tif($(this).val().length == 0){\n");
      out.write("\t\t\t\t\t\tisValied = false;\n");
      out.write("\t\t\t\t\t\tCARBON.showWarningDialog('Please complete Permission Configuration section');\n");
      out.write("\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t}\t\t\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\tif(!isValied){\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif($('.roleMapIdp').length > 0){\n");
      out.write("\t\t\t\tvar isValied = true;\n");
      out.write("\t\t\t\t$.each($('.roleMapIdp'), function(){\n");
      out.write("\t\t\t\t\tif($(this).val().length == 0){\n");
      out.write("\t\t\t\t\t\tisValied = false;\n");
      out.write("\t\t\t\t\t\tCARBON.showWarningDialog('Please complete Role Mapping Configuration section');\n");
      out.write("\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t}\t\t\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\tif(isValied){\n");
      out.write("\t\t\t\t\tif($('.roleMapSp').length > 0){\n");
      out.write("\t\t\t\t\t\t$.each($('.roleMapSp'), function(){\n");
      out.write("\t\t\t\t\t\t\tif($(this).val().length == 0){\n");
      out.write("\t\t\t\t\t\t\t\tisValied = false;\n");
      out.write("\t\t\t\t\t\t\t\tCARBON.showWarningDialog('Please complete Role Mapping Configuration section');\n");
      out.write("\t\t\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t\t\t}\t\t\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(!isValied){\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
      out.write("\t\t\tdocument.getElementById('number_of_permissions').value=numberOfPermissions;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
      out.write("\t\t\tdocument.getElementById('number_of_rolemappings').value=numberOfRoleMappings;\n");
      out.write("\n");
      out.write("\t\t\tdocument.getElementById(\"configure-sp-form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction updateBeanAndRedirect(redirectURL){\n");
      out.write("\t\tvar numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
      out.write("\t\tdocument.getElementById('number_of_claimmappings').value=numberOfClaimMappings;\n");
      out.write("\t\t\n");
      out.write("\t\tvar numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
      out.write("\t\tdocument.getElementById('number_of_permissions').value=numberOfPermissions;\n");
      out.write("\t\t\n");
      out.write("\t\tvar numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
      out.write("\t\tdocument.getElementById('number_of_rolemappings').value=numberOfRoleMappings;\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t    type: \"POST\",\n");
      out.write("\t\t\turl: 'update-application-bean.jsp?spName=");
      out.print(Encode.forUriComponent(spName));
      out.write("',\n");
      out.write("\t\t    data: $(\"#configure-sp-form\").serialize(),\n");
      out.write("\t\t    success: function(){\n");
      out.write("\t\t    \tlocation.href=redirectURL;\n");
      out.write("\t\t    }\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("    function onSamlSsoClick() {\n");
      out.write("\t\tvar spName = document.getElementById(\"oldSPName\").value;\n");
      out.write("\t\tif( spName != '') {\n");
      out.write("\t\t\tupdateBeanAndRedirect(\"../sso-saml/add_service_provider.jsp?spName=\"+spName);\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tCARBON.showWarningDialog('");
      if (_jspx_meth_fmt_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("\t\t\tdocument.getElementById(\"saml_link\").href=\"#\"\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction onKerberosClick() {\n");
      out.write("\t\tvar spName = document.getElementById(\"oldSPName\").value;\n");
      out.write("\t\tif( spName != '') {\n");
      out.write("\t\t\tupdateBeanAndRedirect(\"../servicestore/add-step1.jsp?spName=\"+spName);\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tCARBON.showWarningDialog('");
      if (_jspx_meth_fmt_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("\t\t\tdocument.getElementById(\"kerberos_link\").href=\"#\"\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction onOauthClick() {\n");
      out.write("\t\tvar spName = document.getElementById(\"oldSPName\").value;\n");
      out.write("\t\tif( spName != '') {\n");
      out.write("\t\t\tupdateBeanAndRedirect(\"../oauth/add.jsp?spName=\" + spName);\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tCARBON.showWarningDialog('");
      if (_jspx_meth_fmt_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("\t\t\tdocument.getElementById(\"oauth_link\").href=\"#\"\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction onSTSClick() {\n");
      out.write("\t\tvar spName = document.getElementById(\"oldSPName\").value;\n");
      out.write("\t\tif( spName != '') {\n");
      out.write("\t\t\tupdateBeanAndRedirect(\"../generic-sts/sts.jsp?spName=\" + spName);\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tCARBON.showWarningDialog('");
      if (_jspx_meth_fmt_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("\t\t\tdocument.getElementById(\"sts_link\").href=\"#\"\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction deleteReqPathRow(obj){\n");
      out.write("    \treqPathAuth--;\n");
      out.write("        jQuery(obj).parent().parent().remove();\n");
      out.write("        if($(jQuery('#permissionAddTable tr')).length == 1){\n");
      out.write("            $(jQuery('#permissionAddTable')).toggle();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\t\n");
      out.write("\tfunction onAdvanceAuthClick() {\n");
      out.write("\t\tlocation.href='configure-authentication-flow.jsp?spName=");
      out.print(Encode.forUriComponent(spName));
      out.write("';\n");
      out.write("\t}\n");
      out.write("    \n");
      out.write("    jQuery(document).ready(function(){\n");
      out.write("        jQuery('#authenticationConfRow').hide();\n");
      out.write("        jQuery('#outboundProvisioning').hide();\n");
      out.write("        jQuery('#inboundProvisioning').hide();  \n");
      out.write("        jQuery('#ReqPathAuth').hide();        \n");
      out.write("        jQuery('#permissionConfRow').hide();\n");
      out.write("        jQuery('#claimsConfRow').hide();\n");
      out.write("        jQuery('h2.trigger').click(function(){\n");
      out.write("            if (jQuery(this).next().is(\":visible\")) {\n");
      out.write("                this.className = \"active trigger\";\n");
      out.write("            } else {\n");
      out.write("                this.className = \"trigger\";\n");
      out.write("            }\n");
      out.write("            jQuery(this).next().slideToggle(\"fast\");\n");
      out.write("            return false; //Prevent the browser jump to the link anchor\n");
      out.write("        });\n");
      out.write("        jQuery('#permissionAddLink').click(function(){\n");
      out.write("            jQuery('#permissionAddTable').append(jQuery('<tr><td class=\"leftCol-big\"><input style=\"width: 98%;\" type=\"text\" id=\"app_permission\" name=\"app_permission\"/></td>' +\n");
      out.write("                    '<td><a onclick=\"deletePermissionRow(this)\" class=\"icon-link\" '+\n");
      out.write("                    'style=\"background-image: url(images/delete.gif)\">'+\n");
      out.write("                    'Delete'+\n");
      out.write("                    '</a></td></tr>'));\n");
      out.write("        });\n");
      out.write("        jQuery('#claimMappingAddLink').click(function(){\n");
      out.write("        \t$('#claimMappingAddTable').show();\n");
      out.write("        \tvar selectedIDPClaimName = $('select[name=idpClaimsList]').val();\n");
      out.write("    \t\tif(!validaForDuplications('.idpClaim', selectedIDPClaimName, 'Local Claim')){\n");
      out.write("    \t\t\treturn false;\n");
      out.write("    \t\t}\n");
      out.write("        \tclaimMappinRowID++;\n");
      out.write("    \t\tvar idpClaimListDiv = $('#localClaimsList').clone();\n");
      out.write("    \t\tif(idpClaimListDiv.length > 0){\n");
      out.write("    \t\t\t$(idpClaimListDiv.find('select')).attr('id','idpClaim_'+ claimMappinRowID);\n");
      out.write("    \t\t\t$(idpClaimListDiv.find('select')).attr('name','idpClaim_'+ claimMappinRowID);\n");
      out.write("    \t\t\t$(idpClaimListDiv.find('select')).addClass( \"idpClaim\" );\n");
      out.write("    \t\t}\n");
      out.write("        \tif($('input:radio[name=claim_dialect]:checked').val() == \"local\")\n");
      out.write("        \t{\n");
      out.write("        \t\t$('.spClaimHeaders').hide();\n");
      out.write("        \t\t$('#roleMappingSelection').hide();\n");
      out.write("            \tjQuery('#claimMappingAddTable').append(jQuery('<tr>'+\n");
      out.write("                        '<td style=\"display:none;\"><input type=\"text\" style=\"width: 98%;\" id=\"spClaim_' + claimMappinRowID + '\" name=\"spClaim_' + claimMappinRowID + '\"/></td> '+\n");
      out.write("            \t        '<td>'+idpClaimListDiv.html()+'</td>' +                        \n");
      out.write("                        '<td style=\"display:none;\"><input type=\"checkbox\"  name=\"spClaim_req_' + claimMappinRowID + '\"  id=\"spClaim_req_' + claimMappinRowID + '\" checked/></td>' + \n");
      out.write("                        '<td><a onclick=\"deleteClaimRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete</a></td>' + \n");
      out.write("                        '</tr>'));\n");
      out.write("        \t}\n");
      out.write("        \telse {\n");
      out.write("        \t\t$('.spClaimHeaders').show();\n");
      out.write("        \t\t$('#roleMappingSelection').show();\n");
      out.write("            \tjQuery('#claimMappingAddTable').append(jQuery('<tr>'+\n");
      out.write("                        '<td><input type=\"text\" class=\"spClaimVal\" style=\"width: 98%;\" id=\"spClaim_' + claimMappinRowID + '\" name=\"spClaim_' + claimMappinRowID + '\"/></td> '+\n");
      out.write("                        '<td>'+idpClaimListDiv.html()+'</td>' +\n");
      out.write("                        '<td><input type=\"checkbox\"  name=\"spClaim_req_' + claimMappinRowID + '\"  id=\"spClaim_req_' + claimMappinRowID + '\"/></td>' + \n");
      out.write("                        '<td><a onclick=\"deleteClaimRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete</a></td>' + \n");
      out.write("                        '</tr>'));\n");
      out.write("            \t$('#spClaim_' + claimMappinRowID).change(function(){\n");
      out.write("            \t\tresetRoleClaims();\n");
      out.write("            \t});\n");
      out.write("        \t}\n");
      out.write("\n");
      out.write("        });\n");
      out.write("        jQuery('#roleMappingAddLink').click(function(){\n");
      out.write("        \troleMappinRowID++;\n");
      out.write("        \t$('#roleMappingAddTable').show();\n");
      out.write("        \tjQuery('#roleMappingAddTable').append(jQuery('<tr><td><input style=\"width: 98%;\" class=\"roleMapIdp\" type=\"text\" id=\"idpRole_'+ roleMappinRowID +'\" name=\"idpRole_'+ roleMappinRowID +'\"/></td>' +\n");
      out.write("                    '<td><input style=\"width: 98%;\" class=\"roleMapSp\" type=\"text\" id=\"spRole_' + roleMappinRowID + '\" name=\"spRole_' + roleMappinRowID + '\"/></td> '+\n");
      out.write("                    '<td><a onclick=\"deleteRoleMappingRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete</a>' + \n");
      out.write("                    '</td></tr>'));\n");
      out.write("        })\n");
      out.write("         jQuery('#reqPathAuthenticatorAddLink').click(function(){\n");
      out.write("        \treqPathAuth++;\n");
      out.write("    \t\tvar selectedRePathAuthenticator =jQuery(this).parent().children()[0].value;\n");
      out.write("    \t\tif(!validaForDuplications('[name=req_path_auth]', selectedRePathAuthenticator, \"Configuration\")){\n");
      out.write("    \t\t\treturn false;\n");
      out.write("    \t\t}\n");
      out.write("    \t\t\n");
      out.write("    \t\tjQuery(this)\n");
      out.write("    \t\t\t\t.parent()\n");
      out.write("    \t\t\t\t.parent()\n");
      out.write("    \t\t\t\t.parent()\n");
      out.write("    \t\t\t\t.parent()\n");
      out.write("    \t\t\t\t.append(\n");
      out.write("    \t\t\t\t\t\tjQuery('<tr><td><input name=\"req_path_auth' + '\" id=\"req_path_auth\" type=\"hidden\" value=\"' + selectedRePathAuthenticator + '\" />'+ selectedRePathAuthenticator +'</td><td class=\"leftCol-small\" ><a onclick=\"deleteReqPathRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a></td></tr>'));\n");
      out.write("    \t\t\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        $(\"[name=claim_dialect]\").click(function(){\n");
      out.write("        \t\tvar element = $(this);\n");
      out.write("        \t\tclaimMappinRowID = -1;\n");
      out.write("        \t\t\n");
      out.write("        \t\tif($('.idpClaim').length > 0){\n");
      out.write("                    CARBON.showConfirmationDialog('Changing dialect will delete all claim mappings. Do you want to proceed?',\n");
      out.write("                            function (){\n");
      out.write("                    \t\t\t$.each($('.idpClaim'), function(){\n");
      out.write("                    \t\t    \t$(this).parent().parent().remove();\n");
      out.write("                    \t\t\t});\n");
      out.write("                    \t\t\t$('#claimMappingAddTable').hide();\n");
      out.write("                    \t\t\tchangeDialectUIs(element);\n");
      out.write("                           \t},\n");
      out.write("                    \t\tfunction(){\n");
      out.write("                           \t\t//Reset checkboxes\n");
      out.write("                           \t\t$('#claim_dialect_wso2').attr('checked', (element.val() == 'custom'));\n");
      out.write("                           \t\t$('#claim_dialect_custom').attr('checked', (element.val() == 'local'));\n");
      out.write("                           \t});\n");
      out.write("        \t\t}else{\n");
      out.write("        \t\t\t$('#claimMappingAddTable').hide();\n");
      out.write("        \t\t\tchangeDialectUIs(element);\n");
      out.write("        \t\t}\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        if($('#isNeedToUpdate').val() == 'true'){\n");
      out.write("        \t$('#isNeedToUpdate').val('false');\n");
      out.write("    \t\tvar numberOfClaimMappings = document.getElementById(\"claimMappingAddTable\").rows.length;\n");
      out.write("    \t\tdocument.getElementById('number_of_claimmappings').value=numberOfClaimMappings;\n");
      out.write("    \t\t\n");
      out.write("    \t\tvar numberOfPermissions = document.getElementById(\"permissionAddTable\").rows.length;\n");
      out.write("    \t\tdocument.getElementById('number_of_permissions').value=numberOfPermissions;\n");
      out.write("    \t\t\n");
      out.write("    \t\tvar numberOfRoleMappings = document.getElementById(\"roleMappingAddTable\").rows.length;\n");
      out.write("    \t\tdocument.getElementById('number_of_rolemappings').value=numberOfRoleMappings;\n");
      out.write("    \t\t\n");
      out.write("    \t\t$.ajax({\n");
      out.write("    \t\t    type: \"POST\",\n");
      out.write("    \t\t\turl: 'configure-service-provider-update.jsp?spName=");
      out.print(Encode.forUriComponent(spName));
      out.write("',\n");
      out.write("    \t\t    data: $(\"#configure-sp-form\").serialize()\n");
      out.write("    \t\t});\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("    \n");
      out.write("    function resetRoleClaims(){\n");
      out.write("\t    $(\"#roleClaim option\").filter(function() {\n");
      out.write("\t           return $(this).val().length > 0;\n");
      out.write("\t    }).remove();\n");
      out.write("\t    $(\"#subject_claim_uri option\").filter(function() {\n");
      out.write("\t           return $(this).val().length > 0;\n");
      out.write("\t    }).remove();\n");
      out.write("\t    $.each($('.spClaimVal'), function(){\n");
      out.write("\t    \tif($(this).val().length > 0){\n");
      out.write("\t\t    \t$(\"#roleClaim\").append('<option value=\"'+$(this).val()+'\">'+$(this).val()+'</option>');\n");
      out.write("\t\t    \t$('#subject_claim_uri').append('<option value=\"'+$(this).val()+'\">'+$(this).val()+'</option>');\n");
      out.write("\t    \t}\n");
      out.write("\t    });\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function changeDialectUIs(element){\n");
      out.write("\t    $(\"#roleClaim option\").filter(function() {\n");
      out.write("\t           return $(this).val().length > 0;\n");
      out.write("\t    }).remove();\n");
      out.write("\t    \n");
      out.write("\t    $(\"#subject_claim_uri option\").filter(function() {\n");
      out.write("\t           return $(this).val().length > 0;\n");
      out.write("\t    }).remove();\n");
      out.write("\t    \n");
      out.write("\t\tif(element.val() == 'local'){\n");
      out.write("\t\t\t$('#addClaimUrisLbl').text('Requested Claims:');\n");
      out.write("\t\t\t$('#roleMappingSelection').hide();\n");
      out.write("\t\t\tif($('#local_calim_uris').length > 0 && $('#local_calim_uris').val().length > 0){\n");
      out.write("\t\t\t\tvar dataArray = $('#local_calim_uris').val().split(',');\n");
      out.write("\t\t\t\tif(dataArray.length > 0){\n");
      out.write("\t\t\t\t\tvar optionsList = \"\";\n");
      out.write("\t\t\t\t\t$.each(dataArray, function(){\n");
      out.write("\t\t\t\t\t\tif(this.length > 0){\n");
      out.write("\t\t\t\t\t\t\toptionsList += '<option value='+this+'>'+this+'</option>'\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t\tif(optionsList.length > 0){\n");
      out.write("\t\t\t\t\t\t$('#subject_claim_uri').append(optionsList);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t} \n");
      out.write("\t\t}else{\n");
      out.write("\t\t\t$('#addClaimUrisLbl').text('Identity Provider Claim URIs:');\n");
      out.write("\t\t\t$('#roleMappingSelection').show();\n");
      out.write("\t\t}\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function deleteClaimRow(obj){\n");
      out.write("    \tif($('input:radio[name=claim_dialect]:checked').val() == \"custom\"){\n");
      out.write("    \t\tif($(obj).parent().parent().find('input.spClaimVal').val().length > 0){\n");
      out.write("    \t\t\t$('#roleClaim option[value=\"'+$(obj).parent().parent().find('input.spClaimVal').val()+'\"]').remove();\n");
      out.write("    \t\t\t$('#subject_claim_uri option[value=\"'+$(obj).parent().parent().find('input.spClaimVal').val()+'\"]').remove();\n");
      out.write("    \t\t}\n");
      out.write("    \t}\n");
      out.write("    \t\n");
      out.write("    \tjQuery(obj).parent().parent().remove();\n");
      out.write("\t\tif($('.idpClaim').length == 0){\n");
      out.write("\t\t\t$('#claimMappingAddTable').hide();\n");
      out.write("\t\t}\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function deleteRoleMappingRow(obj){\n");
      out.write("    \tjQuery(obj).parent().parent().remove();\n");
      out.write("    \tif($('.roleMapIdp').length == 0){\n");
      out.write("    \t\t$('#roleMappingAddTable').hide();\n");
      out.write("    \t}\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function deletePermissionRow(obj){\n");
      out.write("    \tjQuery(obj).parent().parent().remove();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    var deletePermissionRows = [];\n");
      out.write("    function deletePermissionRowOld(obj){\n");
      out.write("        if(jQuery(obj).parent().prev().children()[0].value != ''){\n");
      out.write("        \tdeletePermissionRows.push(jQuery(obj).parent().prev().children()[0].value);\n");
      out.write("        }\n");
      out.write("        jQuery(obj).parent().parent().remove();\n");
      out.write("        if($(jQuery('#permissionAddTable tr')).length == 1){\n");
      out.write("            $(jQuery('#permissionAddTable')).toggle();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function addIDPRow(obj) {\n");
      out.write("\t\tvar selectedObj = jQuery(obj).prev().find(\":selected\");\n");
      out.write("\n");
      out.write("\t\tvar selectedIDPName = selectedObj.val(); \n");
      out.write("\t\tif(!validaForDuplications('[name=provisioning_idp]', selectedIDPName, 'Configuration')){\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\t//var stepID = jQuery(obj).parent().children()[1].value;\n");
      out.write("\t\tvar dataArray =  selectedObj.attr('data').split(',');\n");
      out.write("\t\tvar newRow = '<tr><td><input name=\"provisioning_idp\" id=\"\" type=\"hidden\" value=\"' + selectedIDPName + '\" />' + selectedIDPName + ' </td><td> <select name=\"provisioning_con_idp_' + selectedIDPName + '\" style=\"float: left; min-width: 150px;font-size:13px;\">';\n");
      out.write("\t\tfor(var i=0;i<dataArray.length;i++){\n");
      out.write("\t\t\tif(dataArray[i].length > 0){\n");
      out.write("\t\t\t\tnewRow+='<option>'+dataArray[i]+'</option>';\t\t\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tnewRow+='</select></td><td><input type=\"checkbox\" name=\"blocking_prov_' + selectedIDPName +\n");
      out.write("\t\t\t\t'\"  />Blocking</td><td><input type=\"checkbox\" name=\"provisioning_jit_' + selectedIDPName +\n");
      out.write("\t\t\t\t'\"  />JIT Outbound</td><td class=\"leftCol-small\" ><a onclick=\"deleteIDPRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a></td></tr>';\n");
      out.write("\t\tjQuery(obj)\n");
      out.write("\t\t\t\t.parent()\n");
      out.write("\t\t\t\t.parent()\n");
      out.write("\t\t\t\t.parent()\n");
      out.write("\t\t\t\t.parent()\n");
      out.write("\t\t\t\t.append(\n");
      out.write("\t\t\t\t\t\tjQuery(newRow));\t\n");
      out.write("\t\t}\t\n");
      out.write("    \n");
      out.write("    function deleteIDPRow(obj){\n");
      out.write("        jQuery(obj).parent().parent().remove();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("\tfunction validaForDuplications(selector, authenticatorName, type){\n");
      out.write("\t\tif($(selector).length > 0){\n");
      out.write("\t\t\tvar isNew = true;\n");
      out.write("\t\t\t$.each($(selector),function(){\n");
      out.write("\t\t\t\tif($(this).val() == authenticatorName){\n");
      out.write("\t\t\t\t\tCARBON.showWarningDialog(type+' \"'+authenticatorName+'\" is already added');\n");
      out.write("\t\t\t\t\tisNew = false;\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\tif(!isNew){\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn true;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction showHidePassword(element, inputId){\n");
      out.write("\t\tif($(element).text()=='Show'){\n");
      out.write("\t\t\tdocument.getElementById(inputId).type = 'text';\n");
      out.write("\t\t\t$(element).text('Hide');\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\tdocument.getElementById(inputId).type = 'password';\n");
      out.write("\t\t\t$(element).text('Show');\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("    \n");
      out.write("    function disable() {\n");
      out.write("        document.getElementById(\"scim-inbound-userstore\").disabled =!document.getElementById(\"scim-inbound-userstore\").disabled;\n");
      out.write("        document.getElementById(\"dumb\").value = document.getElementById(\"scim-inbound-userstore\").disabled;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function validateTextForIllegal(fld) {\n");
      out.write("        var isValid = doValidateInput(fld, \"Provided Service Provider name is invalid.\");\n");
      out.write("        if (isValid) {\n");
      out.write("            return true;\n");
      out.write("        } else {\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fbundle_005f0.setParent(null);
      // /application/configure-service-provider.jsp(718,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.identity.application.mgt.ui.i18n.Resources");
      int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
      if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_fmt_005fbundle_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_fmt_005fbundle_005f0.doInitBody();
        }
        do {
          out.write("\n");
          out.write("    <div id=\"middle\">\n");
          out.write("        <h2>\n");
          out.write("            ");
          if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("        </h2>\n");
          out.write("        <div id=\"workArea\">\n");
          out.write("            <form id=\"configure-sp-form\" method=\"post\" name=\"configure-sp-form\" method=\"post\" action=\"configure-service-provider-finish.jsp\" >\n");
          out.write("            <input type=\"hidden\" name=\"oldSPName\" id=\"oldSPName\" value=\"");
          out.print(Encode.forHtmlAttribute(spName));
          out.write("\"/>\n");
          out.write("            <input type=\"hidden\" id=\"isNeedToUpdate\" value=\"");
          out.print(isNeedToUpdate);
          out.write("\"/>\n");
          out.write("            <div class=\"sectionSeperator togglebleTitle\">");
          if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</div>\n");
          out.write("            <div class=\"sectionSub\">\n");
          out.write("                <table class=\"carbonFormTable\">\n");
          out.write("                    <tr>\n");
          out.write("                        <td style=\"width:15%\" class=\"leftCol-med labelField\">");
          if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":<span class=\"required\">*</span></td>\n");
          out.write("                        <td>\n");
          out.write("                            <input style=\"width:50%\" id=\"spName\" name=\"spName\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(spName));
          out.write("\" white-list-patterns=\"^[a-zA-Z0-9._|-]*$\" autofocus/>\n");
          out.write("                            <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    <tr>\n");
          out.write("                       <td style=\"width:15%\" class=\"leftCol-med labelField\">Description:</td>                   \n");
          out.write("                     <td>\n");
          out.write("                        <textarea style=\"width:50%\" type=\"text\" name=\"sp-description\" id=\"sp-description\" class=\"text-box-big\">");
          out.print(appBean.getServiceProvider().getDescription() != null ? Encode.forHtmlContent(appBean.getServiceProvider().getDescription()) : "" );
          out.write("</textarea>\n");
          out.write("                        <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    <tr>\n");
          out.write("                    \t<td class=\"leftCol-med\">\n");
          out.write("                             <label for=\"isSaasApp\">");
          if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        </td>\n");
          out.write("                        <td>\n");
          out.write("                            <div class=\"sectionCheckbox\">\n");
          out.write("                                <input type=\"checkbox\"  id=\"isSaasApp\" name=\"isSaasApp\" ");
          out.print(appBean.getServiceProvider().getSaasApp() ? "checked" : "" );
          out.write("/>\n");
          out.write("                                <span style=\"display:inline-block\" class=\"sectionHelp\">\n");
          out.write("                                    ");
          if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                </span>\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                </table>\n");
          out.write("            </div>\n");
          out.write("\n");
          out.write("\t\t\t<h2 id=\"claims_head\" class=\"sectionSeperator trigger active\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("            </h2>\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"claimsConfRow\">\n");
          out.write("                   <table style=\"padding-top: 5px; padding-bottom: 10px;\" class=\"carbonFormTable\">\n");
          out.write("                    \t<tr>\n");
          out.write("                    \t\t<td class=\"leftCol-med labelField\">\n");
          out.write("                    \t\t\t");
          if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":\n");
          out.write("                    \t\t</td>\n");
          out.write("                    \t\t<td class=\"leftCol-med\">\n");
          out.write("                    \t\t\t<input type=\"radio\" id=\"claim_dialect_wso2\" name=\"claim_dialect\" value=\"local\" ");
          out.print(isLocalClaimsSelected ? "checked" : "");
          out.write("><label for=\"claim_dialect_wso2\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                    \t\t</td>\n");
          out.write("                    \t</tr>\n");
          out.write("                \t\t<tr>\n");
          out.write("                \t\t    <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
          out.write("                    \t\t</td>\n");
          out.write("                \t\t\t<td class=\"leftCol-med\">\n");
          out.write("                    \t\t\t<input type=\"radio\" id=\"claim_dialect_custom\" name=\"claim_dialect\" value=\"custom\" ");
          out.print(!isLocalClaimsSelected ? "checked" : "");
          out.write("><label for=\"claim_dialect_custom\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                    \t\t</td>\n");
          out.write("                    \t</tr>\n");
          out.write("                    </table>\n");
          out.write("                    <table  class=\"carbonFormTable\">\n");
          out.write("\t\t\t\t\t<tr>\n");
          out.write("\t\t\t\t\t\t<td class=\"leftCol-med labelField\" style=\"width:15%\">\n");
          out.write("\t\t\t\t\t\t\t<label id=\"addClaimUrisLbl\">");
          out.print(isLocalClaimsSelected ? "Requested Claims:" : "Identity Provider Claim URIs:");
          out.write("</label>\n");
          out.write("\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t\t<td class=\"leftCol-med\">\n");
          out.write("\t\t\t\t\t\t\t<a id=\"claimMappingAddLink\" class=\"icon-link\" style=\"background-image: url(images/add.gif); margin-top: 0px !important; margin-bottom: 5px !important; margin-left: 5px;\">");
          if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                            <table class=\"styledLeft\" id=\"claimMappingAddTable\" style=\"");
          out.print( claimMapping == null || claimMapping.isEmpty() ? "display:none" : "" );
          out.write("\">\n");
          out.write("                              <thead><tr>\n");
          out.write("                              <th class=\"leftCol-big spClaimHeaders\" style=\"");
          out.print(isLocalClaimsSelected ? "display:none;" : "");
          out.write('"');
          out.write('>');
          if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                              <th class=\"leftCol-big\">");
          if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                              <th class=\"leftCol-mid spClaimHeaders\" style=\"");
          out.print(isLocalClaimsSelected ? "display:none;" : "");
          out.write('"');
          out.write('>');
          if (_jspx_meth_fmt_005fmessage_005f19(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                              \n");
          out.write("                              <th>");
          if (_jspx_meth_fmt_005fmessage_005f20(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th></tr></thead>\n");
          out.write("                              <tbody>\n");
          out.write("                              ");
 if(claimMapping != null && !claimMapping.isEmpty()){ 
          out.write("\n");
          out.write("                          \n");
          out.write("                               ");
 
                               int i = -1;
                               for(Map.Entry<String, String> entry : claimMapping.entrySet()){ 
                            	   i++;
                               
          out.write("\n");
          out.write("                               <tr>\n");
          out.write("                                   <td style=\"");
          out.print(isLocalClaimsSelected ? "display:none;" : "");
          out.write("\"><input type=\"text\" class=\"spClaimVal\" style=\"width: 98%;\" value=\"");
          out.print(Encode.forHtmlAttribute(entry.getValue()));
          out.write("\" id=\"spClaim_");
          out.print(i);
          out.write("\" name=\"spClaim_");
          out.print(i);
          out.write("\" readonly=\"readonly\"/></td>\n");
          out.write("                               \t<td>\n");
          out.write("\t\t\t\t\t\t\t\t\t<select id=\"idpClaim_");
          out.print(i);
          out.write("\" name=\"idpClaim_");
          out.print(i);
          out.write("\" class=\"idpClaim\" style=\"float:left; width: 100%\">\t\t\t\t\t\t\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
 String[] localClaims = appBean.getClaimUris();
										for(String localClaimName : localClaims) { 
											if(localClaimName.equals(entry.getKey())){
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(localClaimName));
          out.write("\" selected> ");
          out.print(Encode.forHtmlContent(localClaimName));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
}else{
          out.write(" \n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(localClaimName));
          out.write('"');
          out.write('>');
          out.write(' ');
          out.print(Encode.forHtmlContent(localClaimName));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
 }
										}
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t</select>\n");
          out.write("                               \t</td>                                   \n");
          out.write("                                   <td style=\"");
          out.print(isLocalClaimsSelected ? "display:none;" : "");
          out.write("\">\n");
          out.write("                                   ");
 if ("true".equals(appBean.getRequestedClaims().get(entry.getValue()))){
          out.write("                                 \n");
          out.write("                                   <input type=\"checkbox\"  id=\"spClaim_req_");
          out.print(i);
          out.write("\" name=\"spClaim_req_");
          out.print(i);
          out.write("\" checked/>\n");
          out.write("                                   ");
} else { 
          out.write("\n");
          out.write("                                    <input type=\"checkbox\"  id=\"spClaim_req_");
          out.print(i);
          out.write("\" name=\"spClaim_req_");
          out.print(i);
          out.write("\" />\n");
          out.write("                                   ");
}
          out.write("\n");
          out.write("                                   </td>\n");
          out.write("                                  \n");
          out.write("                                   <td>\n");
          out.write("                                       <a title=\"");
          if (_jspx_meth_fmt_005fmessage_005f21(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\"\n");
          out.write("                                          onclick=\"deleteClaimRow(this);return false;\"\n");
          out.write("                                          href=\"#\"\n");
          out.write("                                          class=\"icon-link\"\n");
          out.write("                                          style=\"background-image: url(images/delete.gif)\">\n");
          out.write("                                           ");
          if (_jspx_meth_fmt_005fmessage_005f22(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                       </a>\n");
          out.write("                                   </td>\n");
          out.write("                               </tr>\n");
          out.write("                               ");
 } 
          out.write("\n");
          out.write("                              ");
 } 
          out.write("\n");
          out.write("                              </tbody>\n");
          out.write("                    \t\t</table>\n");
          out.write("\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t</tr>\n");
          out.write("\n");
          out.write("                    <tr>\n");
          out.write("                    \t\t<td class=\"leftCol-med labelField\">");
          if (_jspx_meth_fmt_005fmessage_005f23(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":\n");
          out.write("                        \t<td>\n");
          out.write("                        \t<select class=\"leftCol-med\" id=\"subject_claim_uri\" name=\"subject_claim_uri\" style=\" margin-left: 5px; \">\n");
          out.write("                        \t\t<option value=\"\">---Select---</option>\n");
          out.write("                        \t\t");
 if(isLocalClaimsSelected){
									String[] localClaimUris = appBean.getClaimUris();
									for(String localClaimName : localClaimUris) {
										if(appBean.getSubjectClaimUri() != null && localClaimName.equals(appBean.getSubjectClaimUri())){
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(localClaimName));
          out.write("\" selected> ");
          out.print(Encode.forHtmlContent(localClaimName));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
}else{
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(localClaimName));
          out.write('"');
          out.write('>');
          out.write(' ');
          out.print(Encode.forHtmlContent(localClaimName));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t");
 }
									}
                        		  } else {
                        			  for(Map.Entry<String, String> entry : claimMapping.entrySet()){ 
          out.write("\n");
          out.write("                        \t\t\t ");
 if(entry.getValue() != null && !entry.getValue().isEmpty()){
                        			 		if(appBean.getSubjectClaimUri() != null && appBean.getSubjectClaimUri().equals(entry.getValue())) { 
          out.write("\n");
          out.write("                        \t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(entry.getValue()));
          out.write("\" selected> ");
          out.print(Encode.forHtmlContent(entry.getValue()));
          out.write("</option>\n");
          out.write("                        \t\t\t\t");
 } else { 
          out.write("\n");
          out.write("                            \t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(entry.getValue()));
          out.write('"');
          out.write('>');
          out.write(' ');
          out.print(Encode.forHtmlContent(entry.getValue()));
          out.write("</option>\n");
          out.write("                            \t\t\t ");
}
                        			 	}
                        			}
                        		} 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t</select>\n");
          out.write("\t\t\t\t\t\t\t</td>\n");
          out.write("                    \t</tr>\n");
          out.write("                    </table>\n");
          out.write("\n");
          out.write("                    <input type=\"hidden\" name=\"number_of_claimmappings\" id=\"number_of_claimmappings\" value=\"1\">\n");
          out.write("                    <div id=\"localClaimsList\" style=\"display: none;\">\n");
          out.write("                  \t\t<select style=\"float:left; width: 100%\">\t\t\t\t\t\t\t\n");
          out.write("\t\t\t\t\t\t\t");
 String[] localClaims = appBean.getClaimUris();
								StringBuffer allLocalClaims = new StringBuffer();
								for(String localClaimName : localClaims) { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(localClaimName));
          out.write('"');
          out.write('>');
          out.write(' ');
          out.print(Encode.forHtmlContent(localClaimName));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t");
 
									allLocalClaims.append(localClaimName + ",");
								} 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t</select>\n");
          out.write("\t\t\t\t\t</div>\n");
          out.write("\t\t\t\t\t<input type=\"hidden\" id =\"local_calim_uris\" value=\"");
          out.print(Encode.forHtmlAttribute(allLocalClaims.toString()));
          out.write("\" >\n");
          out.write("                  \t<div id=\"roleMappingSelection\" style=\"");
          out.print(isLocalClaimsSelected ? "display:none" : "");
          out.write("\">\n");
          out.write("                    <table class=\"carbonFormTable\" style=\"padding-top: 10px\">\n");
          out.write("                  \t<tr>\n");
          out.write("                  \t\t<td class=\"leftCol-med labelField\" style=\"width:15%\">\n");
          out.write("\t\t\t\t\t\t\t<label id=\"addClaimUrisLbl\">");
          if (_jspx_meth_fmt_005fmessage_005f24(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":</label>\n");
          out.write("\t\t\t\t\t\t</td>\n");
          out.write("                        <td >\n");
          out.write("                        \t<select id=\"roleClaim\" name=\"roleClaim\" style=\"float:left;min-width: 250px;\">\n");
          out.write("                        \t\t<option value=\"\">---Select---</option>\n");
          out.write("                        \t\t");
 if(!isLocalClaimsSelected){ 
                        			for(Map.Entry<String, String> entry : claimMapping.entrySet()){ 
          out.write("\n");
          out.write("                        \t\t\t ");
 if(entry.getValue() != null && !entry.getValue().isEmpty()){
                        			 		if(appBean.getRoleClaimUri() != null && appBean.getRoleClaimUri().equals(entry.getValue())) { 
          out.write("\n");
          out.write("                        \t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(entry.getValue()));
          out.write("\" selected> ");
          out.print(Encode.forHtmlContent(entry.getValue()));
          out.write("</option>\n");
          out.write("                        \t\t\t\t");
 } else { 
          out.write("\n");
          out.write("                            \t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(entry.getValue()));
          out.write('"');
          out.write('>');
          out.write(' ');
          out.print(Encode.forHtmlContent(entry.getValue()));
          out.write("</option>\n");
          out.write("                            \t\t\t");
 } 
                        			 	}
          out.write("\n");
          out.write("                        \t\t\t");
} 
          out.write("\t\n");
          out.write("                        \t\t");
 } 
          out.write("\t\t\t\t\t\t\n");
          out.write("\t\t\t\t\t\t\t</select>\n");
          out.write("\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t</tr>\n");
          out.write("\t\t\t\t\t<tr>\n");
          out.write("\t\t\t\t\t\t<td class=\"leftCol-med\" style=\"width:15%\"></td>\n");
          out.write("\t\t\t\t\t\t<td>\n");
          out.write("                           <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f25(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    </table>\n");
          out.write("                    </div>\n");
          out.write("            </div>\n");
          out.write("              \n");
          out.write("\t\t\t<h2 id=\"authorization_permission_head\" class=\"sectionSeperator trigger active\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f26(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("            </h2>\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"permissionConfRow\">\n");
          out.write("            <h2 id=\"permission_mapping_head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                \t\t<a href=\"#\">Permissions</a>\n");
          out.write("            \t\t</h2>\n");
          out.write("            \t   <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display: none;\" id=\"appPermissionRow\">\n");
          out.write("                <table class=\"carbonFormTable\">\n");
          out.write("                   <tr>\n");
          out.write("                        <td>\n");
          out.write("                            <a id=\"permissionAddLink\" class=\"icon-link\" style=\"background-image:url(images/add.gif);margin-left:0;\">");
          if (_jspx_meth_fmt_005fmessage_005f27(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                            <div style=\"clear:both\"></div>\n");
          out.write("                           \t<div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f28(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                            <table class=\"styledLeft\" id=\"permissionAddTable\" >\n");
          out.write("                                <thead>\n");
          out.write("                                </thead>\n");
          out.write("                                <tbody>\n");
          out.write("                                ");
 if(permissions != null && !permissions.isEmpty()){ 
          out.write("\n");
          out.write("                               \n");
          out.write("                                ");
 for(int i = 0; i < permissions.size(); i++){ 
                                if (permissions.get(i)!=null){
                                
          out.write("\n");
          out.write("                                \n");
          out.write("                                <tr>\n");
          out.write("                                    <td class=\"leftCol-big\"><input style=\"width: 98%;\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(permissions.get(i)));
          out.write("\" id=\"app_permission\" name=\"app_permission\" readonly=\"readonly\"/></td>\n");
          out.write("                                    <td>\n");
          out.write("                                        <a title=\"");
          if (_jspx_meth_fmt_005fmessage_005f29(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\"\n");
          out.write("                                           onclick=\"deletePermissionRow(this);return false;\"\n");
          out.write("                                           href=\"#\"\n");
          out.write("                                           class=\"icon-link\"\n");
          out.write("                                           style=\"background-image: url(images/delete.gif)\">\n");
          out.write("                                            ");
          if (_jspx_meth_fmt_005fmessage_005f30(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                        </a>\n");
          out.write("                                    </td>\n");
          out.write("                                </tr>\n");
          out.write("                                ");
 } } 
          out.write("\n");
          out.write("                                ");
 } 
          out.write("\n");
          out.write("                                </tbody>\n");
          out.write("                            </table>\n");
          out.write("                            <div style=\"clear:both\"/>\n");
          out.write("                            <input type=\"hidden\" name=\"number_of_permissions\" id=\"number_of_permissions\" value=\"1\">\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    \n");
          out.write("\t\t\t\t\t</table>\n");
          out.write("\t\t\t\t\t</div>\n");
          out.write("\t\t\t\t\t<h2 id=\"role_mapping_head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                \t\t<a href=\"#\">Role Mapping</a>\n");
          out.write("            \t\t</h2>\n");
          out.write("            \t   <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display: none;\" id=\"roleMappingRowRow\">\n");
          out.write("                    <table>\n");
          out.write("                    <tr>\n");
          out.write("\t\t\t\t\t\t<td>\n");
          out.write("\t\t\t\t\t\t\t<a id=\"roleMappingAddLink\" class=\"icon-link\" style=\"background-image: url(images/add.gif);margin-left:0;\">");
          if (_jspx_meth_fmt_005fmessage_005f31(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("\t\t\t\t\t\t\t<div style=\"clear:both\"/>\n");
          out.write("                            <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f32(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t</tr>\n");
          out.write("                    </table>\n");
          out.write("\t\t\t\t\t<table class=\"styledLeft\" id=\"roleMappingAddTable\" style=\"display:none\">\n");
          out.write("                              <thead><tr><th class=\"leftCol-big\">");
          if (_jspx_meth_fmt_005fmessage_005f33(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th><th class=\"leftCol-big\">");
          if (_jspx_meth_fmt_005fmessage_005f34(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th><th>");
          if (_jspx_meth_fmt_005fmessage_005f35(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th></tr></thead>\n");
          out.write("                              <tbody>\n");
          out.write("                              ");
 if(roleMapping != null && !roleMapping.isEmpty()){ 
          out.write("\n");
          out.write("                              <script>\n");
          out.write("                                  $(jQuery('#roleMappingAddTable')).toggle();\n");
          out.write("                              </script>\n");
          out.write("                               ");
 
                              	int i = -1;
                               for(Map.Entry<String, String> entry : roleMapping.entrySet()){ 
                            	   i++;
                               
          out.write("\n");
          out.write("                               <tr>\n");
          out.write("                               \t<td >\n");
          out.write("                               \t\t<input style=\"width: 98%;\" class=\"roleMapIdp\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(entry.getKey()));
          out.write("\" id=\"idpRole_");
          out.print(i);
          out.write("\" name=\"idpRole_");
          out.print(i);
          out.write("\" readonly=\"readonly\"/>\n");
          out.write("                               \t</td>\n");
          out.write("                                   <td><input style=\"width: 98%;\" class=\"roleMapSp\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(entry.getValue()));
          out.write("\" id=\"spRole_");
          out.print(i);
          out.write("\" name=\"spRole_");
          out.print(i);
          out.write("\" readonly=\"readonly\"/></td>\n");
          out.write("                                   <td>\n");
          out.write("                                       <a title=\"");
          if (_jspx_meth_fmt_005fmessage_005f36(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\"\n");
          out.write("                                          onclick=\"deleteRoleMappingRow(this);return false;\"\n");
          out.write("                                          href=\"#\"\n");
          out.write("                                          class=\"icon-link\"\n");
          out.write("                                          style=\"background-image: url(images/delete.gif)\">\n");
          out.write("                                           ");
          if (_jspx_meth_fmt_005fmessage_005f37(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                       </a>\n");
          out.write("                                   </td>\n");
          out.write("                               </tr>\n");
          out.write("                               ");
 } 
          out.write("\n");
          out.write("                              ");
 } 
          out.write("\n");
          out.write("\t\t\t\t\t\t</tbody>\n");
          out.write("                      </table>\n");
          out.write("\t\t\t\t\t<input type=\"hidden\" name=\"number_of_rolemappings\" id=\"number_of_rolemappings\" value=\"1\">\n");
          out.write("\t\t\t\t\t</div>\n");
          out.write("            </div>\n");
          out.write("\n");
          out.write("            <h2 id=\"app_authentication_head\"  class=\"sectionSeperator trigger active\">\t\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f38(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("            </h2>\n");
          out.write("            \n");
          out.write("            ");
if (display!=null && (display.equals("oauthapp") || display.equals("samlIssuer")  ||
					display.equals("serviceName") || display.equals("kerberos") )) { 
          out.write("\n");
          out.write("                  <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"inbound_auth_request_div\">\n");
          out.write("            ");
} else { 
          out.write("\n");
          out.write("                  <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"inbound_auth_request_div\">           \n");
          out.write("            ");
} 
          out.write("\n");
          out.write("            <h2 id=\"saml.config.head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f39(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                ");
 if(appBean.getSAMLIssuer() != null) { 
          out.write("\n");
          out.write("                \t<div class=\"enablelogo\"><img src=\"images/ok.png\"  width=\"16\" height=\"16\"></div>\n");
          out.write("                ");
} 
          out.write("\n");
          out.write("            </h2>\n");
          out.write("            \n");
          out.write("           ");
if (display!=null && display.equals("samlIssuer")) { 
          out.write("            \n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"saml.config.div\">\n");
          out.write("          ");
 } else { 
          out.write("\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"saml.config.div\">          \n");
          out.write("          ");
 } 
          out.write("\n");
          out.write("                <table class=\"carbonFormTable\">\n");
          out.write("                    <tr>\n");
          out.write("                        <td class=\"leftCol-med labelField\">\n");
          out.write("                        ");

                        	if(appBean.getSAMLIssuer() == null) {
                        
          out.write("\n");
          out.write("                            <a id=\"saml_link\" class=\"icon-link\" onclick=\"onSamlSsoClick()\">");
          if (_jspx_meth_fmt_005fmessage_005f40(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("\t\t\t\t\t\t ");

						 	} else {
						 
          out.write("\n");
          out.write("\t\t\t\t\t\t \t\t<div style=\"clear:both\"></div>\n");
          out.write("\t\t\t\t\t\t\t \t<table class=\"styledLeft\" id=\"samlTable\">\n");
          out.write("                                <thead><tr><th class=\"leftCol-big\">");
          if (_jspx_meth_fmt_005fmessage_005f41(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th><th class=\"leftCol-big\">");
          if (_jspx_meth_fmt_005fmessage_005f42(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th><th>");
          if (_jspx_meth_fmt_005fmessage_005f43(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th></tr></thead>\n");
          out.write("                                <tbody>\n");
          out.write("                                <tr><td>");
          out.print(Encode.forHtmlContent(appBean.getSAMLIssuer()));
          out.write("</td>\n");
          out.write("                                \t<td>\n");
          out.write("                                \t\t");
 if(attributeConsumingServiceIndex == null || attributeConsumingServiceIndex.isEmpty() )
                                			{
                                				attributeConsumingServiceIndex = appBean.getAttributeConsumingServiceIndex();
                                			}
                                		
                                			if(attributeConsumingServiceIndex != null){
          out.write("\n");
          out.write("                                \t\t\t\t");
          out.print(Encode.forHtmlContent(attributeConsumingServiceIndex));
          out.write("\n");
          out.write("                                \t\t\t");
 } 
          out.write("\n");
          out.write("                                \t</td>\n");
          out.write("                                \t\t<td style=\"white-space: nowrap;\">\n");
          out.write("                                \t\t\t<a title=\"Edit Service Providers\" onclick=\"updateBeanAndRedirect('../sso-saml/add_service_provider.jsp?SPAction=editServiceProvider&issuer=");
          out.print(Encode.forUriComponent(appBean.getSAMLIssuer()));
          out.write("&spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\"  class=\"icon-link\" style=\"background-image: url(../admin/images/edit.gif)\">Edit</a>\n");
          out.write("                                \t\t\t<a title=\"Delete Service Providers\" onclick=\"updateBeanAndRedirect('../sso-saml/remove_service_providers.jsp?issuer=");
          out.print(Encode.forUriComponent(appBean.getSAMLIssuer()));
          out.write("&spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a>\n");
          out.write("                                \t\t</td>\n");
          out.write("                                \t</tr>\n");
          out.write("                                </tbody>\n");
          out.write("                                </table>\t\t\n");
          out.write("\t\t\t\t\t\t ");

						    }
						 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t<div style=\"clear:both\"></div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    </table>\n");
          out.write("                    \n");
          out.write("                    </div>\n");
          out.write("            <h2 id=\"oauth.config.head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f44(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                ");
 if(appBean.getOIDCClientId() != null) { 
          out.write("\n");
          out.write("                \t<div class=\"enablelogo\"><img src=\"images/ok.png\"  width=\"16\" height=\"16\"></div>\n");
          out.write("                ");
} 
          out.write("\n");
          out.write("            </h2>\n");
          out.write("            ");
if (display!=null && display.equals("oauthapp")) { 
          out.write("                        \n");
          out.write("                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"oauth.config.div\">\n");
          out.write("            ");
} else { 
          out.write("\n");
          out.write("                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"oauth.config.div\">\n");
          out.write("            ");
} 
          out.write("\n");
          out.write("                <table class=\"carbonFormTable\">\n");
          out.write("                    <tr>\n");
          out.write("                    \t<td>\n");
          out.write("\t                    \t");

	                    		if(appBean.getOIDCClientId() == null) {
	                    	
          out.write("\n");
          out.write("\t\t\t                        <a id=\"oauth_link\" class=\"icon-link\" onclick=\"onOauthClick()\">\n");
          out.write("\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_fmt_005fmessage_005f45(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("\t\t\t\t\t\t\t ");

							 	} else {
							 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t <div style=\"clear:both\"></div>\n");
          out.write("\t\t\t\t\t\t\t <table class=\"styledLeft\" id=\"samlTable\">\n");
          out.write("                                <thead>\n");
          out.write("                                \t<tr>\n");
          out.write("                                \t\t<th class=\"leftCol-big\">OAuth Client Key</th>\n");
          out.write("                                \t\t<th class=\"leftCol-big\">OAuth Client Secret</th>\n");
          out.write("                                \t\t<th>");
          if (_jspx_meth_fmt_005fmessage_005f46(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                                \t</tr>\n");
          out.write("                                </thead>\n");
          out.write("                                <tbody>\n");
          out.write("                                <tr>\n");
          out.write("                                \t<td>");
          out.print(Encode.forHtmlContent(appBean.getOIDCClientId()));
          out.write("</td>\n");
          out.write("                                \t<td>\n");
          out.write("                                \t\t");
if(oauthConsumerSecret == null || oauthConsumerSecret.isEmpty()){
                                				oauthConsumerSecret = appBean.getOauthConsumerSecret();
                                			}
                                		  if(oauthConsumerSecret != null){
          out.write("\n");
          out.write("                                \t\t\t\t<div>\n");
          out.write("                                \t\t\t\t\t<input style=\"border: none; background: white;\" type=\"password\" id=\"oauthConsumerSecret\" name=\"oauthConsumerSecret\" value=\"");
          out.print(Encode.forHtmlAttribute(oauthConsumerSecret));
          out.write("\"readonly=\"readonly\">\n");
          out.write("                                \t\t\t\t\t<span style=\"float: right;\">\n");
          out.write("                                \t\t\t\t\t\t<a style=\"margin-top: 5px;\" class=\"showHideBtn\" onclick=\"showHidePassword(this, 'oauthConsumerSecret')\">Show</a>\n");
          out.write("                                \t\t\t\t\t</span>\n");
          out.write("                                \t\t\t\t</div>\n");
          out.write("                                \t\t  ");
} 
          out.write("\n");
          out.write("                                \t</td>\n");
          out.write("                                \t\t<td style=\"white-space: nowrap;\">\n");
          out.write("                                \t\t\t<a title=\"Edit Service Providers\" onclick=\"updateBeanAndRedirect('../oauth/edit.jsp?appName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\"  class=\"icon-link\" style=\"background-image: url(../admin/images/edit.gif)\">Edit</a>\n");
          out.write("                                \t\t\t<a title=\"Delete Service Providers\" onclick=\"updateBeanAndRedirect('../oauth/remove-app.jsp?consumerkey=");
          out.print(Encode.forUriComponent(appBean.getOIDCClientId()));
          out.write("&appName=");
          out.print(Encode.forUriComponent(spName));
          out.write("&spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a>\n");
          out.write("                                \t\t</td>\n");
          out.write("                                \t</tr>\n");
          out.write("                                </tbody>\n");
          out.write("                                </table>\n");
          out.write("\t\t\t\t\t\t\t ");

							 	}
							 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t<div style=\"clear:both\"></div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    </table>\n");
          out.write("                    </div>\n");
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t<h2 id=\"openid.config.head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("\t\t\t\t\t<a href=\"#\">OpenID Configuration</a>\n");
          out.write("\t\t\t\t\t<div class=\"enablelogo\"><img src=\"images/ok.png\"  width=\"16\" height=\"16\"></div>\n");
          out.write("\t\t\t\t</h2>\n");
          out.write("\t\t\t\t<div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"openid.config.div\">\n");
          out.write("\t\t\t\t\t<table class=\"carbonFormTable\">\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t<tr>\n");
          out.write("\t\t\t\t\t\t\t<td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
          out.write("\t\t\t\t\t\t\t\t");
          if (_jspx_meth_fmt_005fmessage_005f47(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":\n");
          out.write("\t\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t\t\t<td>\n");
          out.write("\t\t\t\t\t\t\t\t");

									if(appBean.getOpenIDRealm() != null) {
								
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t<input style=\"width:50%\" id=\"openidRealm\" name=\"openidRealm\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(appBean.getOpenIDRealm()));
          out.write("\" autofocus/>\n");
          out.write("\t\t\t\t\t\t\t\t");
 } else { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t<input style=\"width:50%\" id=\"openidRealm\" name=\"openidRealm\" type=\"text\" value=\"\" autofocus/>\n");
          out.write("\t\t\t\t\t\t\t\t");
 } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"sectionHelp\">\n");
          out.write("\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_fmt_005fmessage_005f48(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t</div>\n");
          out.write("\t\t\t\t\t\t\t</td>\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t</tr>\n");
          out.write("\n");
          out.write("\t\t\t\t\t</table>\n");
          out.write("\t\t\t\t</div>\n");
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t<h2 id=\"passive.sts.config.head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                <a href=\"#\">WS-Federation (Passive) Configuration</a>\n");
          out.write("                <div class=\"enablelogo\"><img src=\"images/ok.png\"  width=\"16\" height=\"16\"></div>\n");
          out.write("            </h2>\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"passive.config.div\">\n");
          out.write("                  <table class=\"carbonFormTable\">\n");
          out.write("                    \n");
          out.write("                    <tr>\n");
          out.write("                    \t<td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
          out.write("                    \t\t");
          if (_jspx_meth_fmt_005fmessage_005f49(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":\n");
          out.write("                    \t</td>\n");
          out.write("                    \t<td>\n");
          out.write("                    \t    ");

	                    		if(appBean.getPassiveSTSRealm() != null) {
	                    	
          out.write("\t                    \n");
          out.write("                            <input style=\"width:50%\" id=\"passiveSTSRealm\" name=\"passiveSTSRealm\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(appBean.getPassiveSTSRealm()));
          out.write("\" autofocus/>\n");
          out.write("                            ");
 } else { 
          out.write("\n");
          out.write("                            <input style=\"width:50%\" id=\"passiveSTSRealm\" name=\"passiveSTSRealm\" type=\"text\" value=\"\" autofocus/>\n");
          out.write("                            ");
 } 
          out.write("\n");
          out.write("                          <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f50(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                        \n");
          out.write("                    </tr>\n");
          out.write("                      <tr>\n");
          out.write("                          <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
          out.write("                              ");
          if (_jspx_meth_fmt_005fmessage_005f51(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":\n");
          out.write("                          </td>\n");
          out.write("                          <td>\n");
          out.write("                              ");

                                  if(appBean.getPassiveSTSWReply() != null) {
                              
          out.write("\n");
          out.write("                              <input style=\"width:50%\" id=\"passiveSTSWReply\" name=\"passiveSTSWReply\" type=\"text\" value=\"");
          out.print(Encode.forHtmlAttribute(appBean.getPassiveSTSWReply()));
          out.write("\" autofocus/>\n");
          out.write("                              ");
 } else { 
          out.write("\n");
          out.write("                              <input style=\"width:50%\" id=\"passiveSTSWReply\" name=\"passiveSTSWReply\" type=\"text\" value=\"\" autofocus/>\n");
          out.write("                              ");
 } 
          out.write("\n");
          out.write("                              <div class=\"sectionHelp\">\n");
          out.write("                                  ");
          if (_jspx_meth_fmt_005fmessage_005f52(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                              </div>\n");
          out.write("                          </td>\n");
          out.write("\n");
          out.write("                      </tr>\n");
          out.write("                   \n");
          out.write("                  </table>\n");
          out.write("            </div>\n");
          out.write("\n");
          out.write("\t\t\t\t<h2 id=\"wst.config.head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("\t\t\t\t\t<a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f53(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("\t\t\t\t\t");
 if(appBean.getWstrustSP() != null) { 
          out.write("\n");
          out.write("\t\t\t\t\t<div class=\"enablelogo\"><img src=\"images/ok.png\"  width=\"16\" height=\"16\"></div>\n");
          out.write("\t\t\t\t\t");
} 
          out.write("\n");
          out.write("\t\t\t\t</h2>\n");
          out.write("\t\t\t\t\t\t");
if (display!=null && display.equals("serviceName")) { 
          out.write("\n");
          out.write("\t\t\t\t<div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"wst.config.div\">\n");
          out.write("\t\t\t\t\t");
 } else { 
          out.write("\n");
          out.write("\t\t\t\t\t<div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"wst.config.div\">\n");
          out.write("\t\t\t\t\t\t");
} 
          out.write("\n");
          out.write("\t\t\t\t\t\t<table class=\"carbonFormTable\">\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t<tr>\n");
          out.write("\t\t\t\t\t\t\t\t<td>\n");
          out.write("\t\t\t\t\t\t\t\t\t");

										if(appBean.getWstrustSP() == null) {
									
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t<a id=\"sts_link\" class=\"icon-link\" onclick=\"onSTSClick()\">\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_fmt_005fmessage_005f54(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("\t\t\t\t\t\t\t\t\t");

									} else {
									
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t<div style=\"clear:both\"></div>\n");
          out.write("\t\t\t\t\t\t\t\t\t<table class=\"styledLeft\" id=\"samlTable\">\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<thead><tr><th class=\"leftCol-med\">Audience</th><th>");
          if (_jspx_meth_fmt_005fmessage_005f55(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th></tr></thead>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<tr>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<td>");
          out.print(Encode.forHtmlContent(appBean.getWstrustSP()));
          out.write("</td>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<td style=\"white-space: nowrap;\">\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a title=\"Edit Audience\" onclick=\"updateBeanAndRedirect('../generic-sts/sts.jsp?spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("&&spAudience=");
          out.print(Encode.forUriComponent(appBean.getWstrustSP()));
          out.write("&spAction=spEdit');\"  class=\"icon-link\" style=\"background-image: url(../admin/images/edit.gif)\">Edit</a>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a title=\"Delete Audience\" onclick=\"updateBeanAndRedirect('../generic-sts/remove-trusted-service.jsp?action=delete&spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("&endpointaddrs=");
          out.print(Encode.forUriComponent(appBean.getWstrustSP()));
          out.write("');\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t</tr>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\n");
          out.write("\t\t\t\t\t\t\t\t\t</table>\n");
          out.write("\t\t\t\t\t\t\t\t\t");

										}
									
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t<div style=\"clear:both\"></div>\n");
          out.write("\t\t\t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t\t\t</tr>\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t</table>\n");
          out.write("\t\t\t\t\t</div>\n");
          out.write("\n");
          out.write("\t\t\t\t   <h2 id=\"kerberos.kdc.head\" class=\"sectionSeperator trigger active\"\n");
          out.write("\t\t\t\t\t   style=\"background-color: beige;\">\n");
          out.write("\t\t\t\t\t   <a href=\"#\">Kerberos KDC</a>\n");
          out.write("\n");
          out.write("\t\t\t\t\t  ");
 if(appBean.getKerberosServiceName() != null) { 
          out.write("\n");
          out.write("\t\t\t\t\t   \t\t<div class=\"enablelogo\"><img src=\"images/ok.png\"  width=\"16\" height=\"16\"></div>\n");
          out.write("\t\t\t\t\t   ");
 } 
          out.write("\n");
          out.write("\t\t\t\t   </h2>\n");
          out.write("\n");
          out.write("\t\t\t\t\t");
if (display!=null && display.equals("kerberos")) { 
          out.write("\n");
          out.write("\t\t\t\t\t\t<div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"kerberos.config.div\">\n");
          out.write("\t\t\t\t\t");
} else { 
          out.write("\n");
          out.write("\t\t\t\t\t\t<div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
          out.write("\t\t\t\t\t\t\t\t id=\"kerberos.config.div\">\n");
          out.write("\t\t\t\t\t");
} 
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t\t   <table class=\"carbonFormTable\">\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t   <tr>\n");
          out.write("\t\t\t\t\t\t\t   <td>\n");
          out.write("\t\t\t\t\t\t\t\t   ");

									   if(appBean.getKerberosServiceName() == null) {
								   
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t   <a id=\"kerberos_link\" class=\"icon-link\" onclick=\"onKerberosClick()\">");
          if (_jspx_meth_fmt_005fmessage_005f56(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t   ");
 } else { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t   <div style=\"clear:both\"></div>\n");
          out.write("\t\t\t\t\t\t\t\t   <table class=\"styledLeft\" id=\"kerberosTable\">\n");
          out.write("\t\t\t\t\t\t\t\t\t   <thead>\n");
          out.write("\t\t\t\t\t\t\t\t\t   <tr>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t   <th class=\"leftCol-big\">");
          if (_jspx_meth_fmt_005fmessage_005f57(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t   <th>");
          if (_jspx_meth_fmt_005fmessage_005f58(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("\t\t\t\t\t\t\t\t\t   </tr>\n");
          out.write("\t\t\t\t\t\t\t\t\t   </thead>\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t   <tbody>\n");
          out.write("\t\t\t\t\t\t\t\t\t   <tr>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t   <td>");
          out.print(Encode.forHtmlContent(appBean.getKerberosServiceName()));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t   </td>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t   <td style=\"white-space: nowrap;\">\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t   <a title=\"Change Password\"\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t  onclick=\"updateBeanAndRedirect('../servicestore/change-passwd.jsp?SPAction=changePWr&spnName=");
          out.print(Encode.forUriComponent(appBean.getKerberosServiceName()));
          out.write("&spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\"\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t  class=\"icon-link\"\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t  style=\"background-image: url(../admin/images/edit.gif)\">Change Password</a>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t   <a title=\"Delete\"\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t  onclick=\"updateBeanAndRedirect('../servicestore/delete-finish.jsp?SPAction=delete&spnName=");
          out.print(Encode.forUriComponent(appBean.getKerberosServiceName()));
          out.write("&spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\"\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t  class=\"icon-link\" style=\"background-image: url(images/delete.gif)\">\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t   Delete </a>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t   </td>\n");
          out.write("\t\t\t\t\t\t\t\t\t   </tr>\n");
          out.write("\t\t\t\t\t\t\t\t\t   </tbody>\n");
          out.write("\t\t\t\t\t\t\t\t   </table>\n");
          out.write("\t\t\t\t\t\t\t\t   ");

									   }
								   
          out.write("\n");
          out.write("\t\t\t\t\t\t\t   </td>\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t   </tr>\n");
          out.write("\n");
          out.write("\t\t\t\t\t   </table>\n");
          out.write("\t\t\t\t   </div>\n");
          out.write("\n");
          out.write("                        ");

                            List<String> standardInboundAuthTypes = new ArrayList<String>();
                            standardInboundAuthTypes = new ArrayList<String>();
                            standardInboundAuthTypes.add("oauth2");
                            standardInboundAuthTypes.add("wstrust");
                            standardInboundAuthTypes.add("samlsso");
                            standardInboundAuthTypes.add("openid");
                            standardInboundAuthTypes.add("passivests");

                            if (!CollectionUtils.isEmpty(appBean.getInboundAuthenticators())) {
                                List<InboundAuthenticationRequestConfig> customAuthenticators = appBean
                                        .getInboundAuthenticators();
                                for (InboundAuthenticationRequestConfig customAuthenticator : customAuthenticators) {
                                    if(!standardInboundAuthTypes.contains(customAuthenticator.getInboundAuthType())){
                                    String type = customAuthenticator.getInboundAuthType();
                                    String friendlyName = customAuthenticator.getFriendlyName();
                        
          out.write("\n");
          out.write("\n");
          out.write("                        <h2 id=\"openid.config.head\" class=\"sectionSeperator trigger active\"\n");
          out.write("                            style=\"background-color: beige;\">\n");
          out.write("                            <a href=\"#\">");
          out.print(friendlyName);
          out.write("\n");
          out.write("                            </a>\n");
          out.write("\n");
          out.write("                            <div class=\"enablelogo\"><img src=\"images/ok.png\" width=\"16\" height=\"16\"></div>\n");
          out.write("                        </h2>\n");
          out.write("                        <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\"\n");
          out.write("                             id=\"openid.config.div\">\n");
          out.write("                            <table class=\"carbonFormTable\">\n");
          out.write("                                ");


                                    Property[] properties = customAuthenticator.getProperties();
                                    for (Property prop : properties) {
                                        String propName = "custom_auth_prop_name_" + type + "_" + prop.getName();

                                
          out.write("\n");
          out.write("\n");
          out.write("                                <tr>\n");
          out.write("                                    <td style=\"width:15%\" class=\"leftCol-med labelField\">\n");
          out.write("                                        ");
          out.print(prop.getDisplayName() + ":");
          out.write("\n");
          out.write("                                    </td>\n");
          out.write("                                    <td>\n");
          out.write("                                        ");

                                            if (prop.getValue() != null) {
                                        
          out.write("\n");
          out.write("                                        <input style=\"width:50%\" id=\"");
          out.print(propName);
          out.write("\" name=\"");
          out.print(propName);
          out.write("\" type=\"text\"\n");
          out.write("                                               value=\"");
          out.print(prop.getValue());
          out.write("\" autofocus/>\n");
          out.write("                                        ");
 } else { 
          out.write("\n");
          out.write("                                        <input style=\"width:50%\" id=\"");
          out.print(propName);
          out.write("\" name=\"");
          out.print(propName);
          out.write("\" type=\"text\"\n");
          out.write("                                               autofocus/>\n");
          out.write("                                        ");
 } 
          out.write("\n");
          out.write("\n");
          out.write("                                    </td>\n");
          out.write("\n");
          out.write("                                </tr>\n");
          out.write("                                ");

                                    }
                                
          out.write("\n");
          out.write("\n");
          out.write("                            </table>\n");
          out.write("                        </div>\n");
          out.write("                        ");

                                    }
                                }
                            }
                        
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t   </div>\n");
          out.write("            \n");
          out.write("             <h2 id=\"app_authentication_advance_head\"  class=\"sectionSeperator trigger active\">\n");
          out.write("               \t\t<a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f59(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("           \t\t  </h2>\n");
          out.write("           \t\t  ");
if (display!=null && "auth_config".equals(display)) {
          out.write("\n");
          out.write("           \t\t    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:block;\" id=\"advanceAuthnConfRow\">\n");
          out.write("           \t\t  ");
 } else { 
          out.write("\n");
          out.write("                    <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display:none;\" id=\"advanceAuthnConfRow\">\n");
          out.write("                   ");
 } 
          out.write("\n");
          out.write("                   \t<table class=\"carbonFormTable\">\n");
          out.write("                    \t<tr>\n");
          out.write("                    \t\t<td class=\"leftCol-med labelField\">");
          if (_jspx_meth_fmt_005fmessage_005f60(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(":<span class=\"required\">*</span>\n");
          out.write("                    \t\t</td>\n");
          out.write("                        \t<td class=\"leftCol-med\">\n");
          out.write("                        \t");
 if(ApplicationBean.AUTH_TYPE_DEFAULT.equals(appBean.getAuthenticationType())) { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"default\" name=\"auth_type\" value=\"default\" checked><label for=\"default\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f61(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t\t");
 } else { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"default\" name=\"auth_type\" value=\"default\" ><label for=\"default\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f62(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t");
 } 
          out.write("\n");
          out.write("                        \t</td>\n");
          out.write("                        \t<td/>\n");
          out.write("                    \t</tr>   \n");
          out.write("                  \t\t  \t<tr>\n");
          out.write("                    \t\t<td style=\"width:15%\" class=\"leftCol-med labelField\"/>\n");
          out.write("                        \t<td>\n");
          out.write("                        \t");
 if(ApplicationBean.AUTH_TYPE_LOCAL.equals(appBean.getAuthenticationType())) { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"local\" name=\"auth_type\" value=\"local\" checked><label for=\"local\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f63(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t\t");
 } else { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"local\" name=\"auth_type\" value=\"local\"><label for=\"local\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f64(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t\t");
 } 
          out.write("\n");
          out.write("                        \t</td>\n");
          out.write("                        \t<td>\n");
          out.write("                        \t\t\t<select name=\"local_authenticator\" id=\"local_authenticator\">\n");
          out.write("                        \t\t\t");

                        			if(appBean.getLocalAuthenticatorConfigs() != null) {
                        				LocalAuthenticatorConfig[] localAuthenticatorConfigs = appBean.getLocalAuthenticatorConfigs();
                        			    for(LocalAuthenticatorConfig authenticator : localAuthenticatorConfigs) {
                        			
          out.write("\n");
          out.write("\t                        \t\t\t\t");
 if(authenticator.getName().equals(appBean.getStepZeroAuthenticatorName(ApplicationBean.AUTH_TYPE_LOCAL))) { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(authenticator.getName()));
          out.write("\" selected>");
          out.print(Encode.forHtmlContent(authenticator.getDisplayName()));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
 } else { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(authenticator.getName()));
          out.write('"');
          out.write('>');
          out.print(Encode.forHtmlContent(authenticator.getDisplayName()));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
 } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
 } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t");
 } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t</select>\n");
          out.write("                        \t</td>\n");
          out.write("                    \t</tr>   \n");
          out.write("                    \t");
 
                    	
                    	if(appBean.getEnabledFederatedIdentityProviders()  != null && appBean.getEnabledFederatedIdentityProviders().size() > 0) {
          out.write("\n");
          out.write("                    \t<tr>\n");
          out.write("                    \t\t<td class=\"leftCol-med labelField\"/>\n");
          out.write("                        \t<td>\n");
          out.write("                        \t");
 if(ApplicationBean.AUTH_TYPE_FEDERATED.equals(appBean.getAuthenticationType())) { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"federated\" name=\"auth_type\" value=\"federated\" checked><label for=\"federated\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f65(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t");
 } else { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"federated\" name=\"auth_type\" value=\"federated\"><label for=\"federated\" style=\"cursor: pointer;\">");
          if (_jspx_meth_fmt_005fmessage_005f66(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t");
 } 
          out.write("\n");
          out.write("                        \t</td>\n");
          out.write("                        \t<td>\n");
          out.write("                        \t\t\t<select name=\"fed_idp\" id=\"fed_idp\">\n");
          out.write("                        \t\t\t");
 List<IdentityProvider> idps = appBean.getEnabledFederatedIdentityProviders();
                        				String selectedIdP = appBean.getStepZeroAuthenticatorName(ApplicationBean.AUTH_TYPE_FEDERATED);
                        				boolean isSelectedIdPUsed = false;
                        				for(IdentityProvider idp : idps) {
	                        				if(selectedIdP != null && idp.getIdentityProviderName().equals(selectedIdP)) {
	                        					isSelectedIdPUsed = true;	
	                        				
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write("\" selected>");
          out.print(Encode.forHtmlContent(idp.getIdentityProviderName()) );
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
 } else { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write('"');
          out.write('>');
          out.print(Encode.forHtmlContent(idp.getIdentityProviderName()));
          out.write("</option>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
  } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t");
  } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t</select>\n");
          out.write("                        \t</td>\n");
          out.write("                    \t</tr> \n");
          out.write("                    \t");
 } else {
          out.write("\n");
          out.write("                    \t<tr>\n");
          out.write("                    \t\t<td class=\"leftCol-med labelField\"/>\n");
          out.write("                    \t\t<td>\n");
          out.write("                    \t\t\t<input type=\"radio\" id=\"disabledFederated\" name=\"auth_type\" value=\"federated\" disabled><label for=\"disabledFederated\">");
          if (_jspx_meth_fmt_005fmessage_005f67(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                    \t\t</td>\n");
          out.write("                    \t\t<td></td>\n");
          out.write("                    \t</tr>\n");
          out.write("                    \t");
 } 
          out.write("\n");
          out.write("                    \t<tr>\n");
          out.write("                    \t\t<td class=\"leftCol-med labelField\"/>\n");
          out.write("                        \t<td>\n");
          out.write("                        \t");
 if(ApplicationBean.AUTH_TYPE_FLOW.equals(appBean.getAuthenticationType())) { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"advanced\" name=\"auth_type\" value=\"flow\" onclick=\"updateBeanAndRedirect('configure-authentication-flow.jsp?spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("');\" checked><label style=\"cursor: pointer; color: #2F7ABD;\" for=\"advanced\">");
          if (_jspx_meth_fmt_005fmessage_005f68(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t");
 } else { 
          out.write("\n");
          out.write("                        \t\t<input type=\"radio\" id=\"advanced\" name=\"auth_type\" value=\"flow\" onclick=\"updateBeanAndRedirect('configure-authentication-flow.jsp?spName=");
          out.print(Encode.forUriComponent(spName));
          out.write("')\"><label style=\"cursor: pointer; color: #2F7ABD;\" for=\"advanced\">");
          if (_jspx_meth_fmt_005fmessage_005f69(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t\t");
 } 
          out.write("\n");
          out.write("                        \t</td>\n");
          out.write("                    \t</tr>               \n");
          out.write("                  </table>\n");
          out.write("                  <table class=\"carbonFormTable\" style=\"padding-top: 5px;\">\n");
          out.write("                   \t\t<tr>\n");
          out.write("\t\t\t\t\t\t\t<td class=\"leftCol-med\">\n");
          out.write("                                <input type=\"checkbox\"  id=\"always_send_local_subject_id\" name=\"always_send_local_subject_id\" ");
          out.print(appBean.isAlwaysSendMappedLocalSubjectId() ? "checked" : "" );
          out.write("/><label for=\"always_send_local_subject_id\">");
          if (_jspx_meth_fmt_005fmessage_005f70(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t</td>\n");
          out.write("                    \t</tr>\n");
          out.write("                    \t<tr>\n");
          out.write("\t\t\t\t\t\t\t<td class=\"leftCol-med\">\n");
          out.write("                                <input type=\"checkbox\"  id=\"always_send_auth_list_of_idps\" name=\"always_send_auth_list_of_idps\" ");
          out.print(appBean.isAlwaysSendBackAuthenticatedListOfIdPs() ? "checked" : "" );
          out.write("/><label for=\"always_send_auth_list_of_idps\">");
          if (_jspx_meth_fmt_005fmessage_005f71(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("                        \t</td>\n");
          out.write("                    \t</tr>\n");
          out.write("\t\t\t\t\t  <tr>\n");
          out.write("\t\t\t\t\t\t  <td class=\"leftCol-med\">\n");
          out.write("\t\t\t\t\t\t\t  <input type=\"checkbox\"  id=\"use_tenant_domain_in_local_subject_identifier\"\n");
          out.write("\t\t\t\t\t\t\t\t\t name=\"use_tenant_domain_in_local_subject_identifier\" ");
          out.print(appBean.isUseTenantDomainInLocalSubjectIdentifier() ? "checked"
									  : "" );
          out.write("/><label for=\"use_tenant_domain_in_local_subject_identifier\">");
          if (_jspx_meth_fmt_005fmessage_005f72(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("\t\t\t\t\t\t  </td>\n");
          out.write("\t\t\t\t\t  </tr>\n");
          out.write("\t\t\t\t\t  <tr>\n");
          out.write("\t\t\t\t\t\t  <td class=\"leftCol-med\">\n");
          out.write("\t\t\t\t\t\t\t  <input type=\"checkbox\"  id=\"use_userstore_domain_in_local_subject_identifier\"\n");
          out.write("\t\t\t\t\t\t\t\t\t name=\"use_userstore_domain_in_local_subject_identifier\" ");
          out.print(appBean.isUseUserstoreDomainInLocalSubjectIdentifier() ?
									  "checked" : "" );
          out.write("/><label\n");
          out.write("\t\t\t\t\t\t\t\t  for=\"use_userstore_domain_in_local_subject_identifier\">");
          if (_jspx_meth_fmt_005fmessage_005f73(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</label>\n");
          out.write("\t\t\t\t\t\t  </td>\n");
          out.write("\t\t\t\t\t  </tr>\n");
          out.write("                    </table>\n");
          out.write("\n");
          out.write("                  \n");
          out.write("                   <h2 id=\"req_path_head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f74(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("            </h2>\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"ReqPathAuth\">\n");
          out.write("                    <table class=\"styledLeft\" width=\"100%\" id=\"req_path_auth_table\">\n");
          out.write("                    \t<thead>\n");
          out.write("                    \t<tr>\n");
          out.write("                    \t\t<td>\n");
          out.write("                    \t\t\t<select name=\"reqPathAuthType\" style=\"float: left; min-width: 150px;font-size:13px;\">");
          out.print(requestPathAuthTypes.toString());
          out.write("</select>\n");
          out.write("                    \t\t\t<a id=\"reqPathAuthenticatorAddLink\" class=\"icon-link\" style=\"background-image:url(images/add.gif);\">Add</a>\n");
          out.write("                    \t\t\t<div style=\"clear:both\"></div>\n");
          out.write("                           \t\t<div class=\"sectionHelp\">\n");
          out.write("                                \t");
          if (_jspx_meth_fmt_005fmessage_005f75(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            \t</div>\n");
          out.write("                    \t\t</td>\n");
          out.write("                    \t</tr>\n");
          out.write("                    \t</thead>\n");
          out.write("                    \t\n");
          out.write("                    \t");

                    	 if(appBean.getServiceProvider().getRequestPathAuthenticatorConfigs() != null && appBean.getServiceProvider().getRequestPathAuthenticatorConfigs().length>0){
                    		 int x = 0;
                    		 for (RequestPathAuthenticatorConfig reqAth : appBean.getServiceProvider().getRequestPathAuthenticatorConfigs()) {
                    			 if (reqAth!=null) {
                    			 
          out.write("\n");
          out.write("                    \t\t\t <tr>\n");
          out.write("                    \t\t\t <td>\n");
          out.write("                    \t\t\t \t<input name=\"req_path_auth\" id=\"req_path_auth\" type=\"hidden\" value=\"");
          out.print(Encode.forHtmlAttribute(reqAth.getName()));
          out.write("\" />\n");
          out.write("                    \t\t\t \t<input name=\"req_path_auth_");
          out.print(Encode.forHtmlAttribute(reqAth.getName()));
          out.write("\" id=\"req_path_auth_");
          out.print(Encode.forHtmlAttribute(reqAth.getName()));
          out.write("\" type=\"hidden\" value=\"");
          out.print(Encode.forHtmlAttribute(reqAth.getName()));
          out.write("\" />\n");
          out.write("                    \t\t\t \t\n");
          out.write("                    \t\t\t \t");
          out.print(Encode.forHtmlContent(reqAth.getName()));
          out.write("\n");
          out.write("                    \t\t\t </td>\n");
          out.write("                    \t\t\t <td class=\"leftCol-small\" >\n");
          out.write("                    \t\t\t \t<a onclick=\"deleteReqPathRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a>\n");
          out.write("                    \t\t\t </td>\n");
          out.write("                    \t\t\t </tr>\t      \t\t\t \n");
          out.write("                    \t\t\t ");
  
                    			 }
                    		 }
                    	 }
                    	
                    	
          out.write("\n");
          out.write("                    </table> \n");
          out.write("            </div>\n");
          out.write("                  \n");
          out.write("            </div>\n");
          out.write("            \n");
          out.write("            <h2 id=\"inbound_provisioning_head\" class=\"sectionSeperator trigger active\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f76(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("            </h2>\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"inboundProvisioning\">\n");
          out.write("            \n");
          out.write("             <h2 id=\"scim-inbound_provisioning_head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f77(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("             </h2>\n");
          out.write("                <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"scim-inbound-provisioning-div\">\n");
          out.write("                <table class=\"carbonFormTable\">\n");
          out.write("                  <tr><td>Service provider based SCIM provisioning is protected via OAuth 2.0. \n");
          out.write("                  Your service provider must have a valid OAuth 2.0 client key and a client secret to invoke the SCIM API.\n");
          out.write("                  To create OAuth 2.0 key/secret : Inbound Authentication Configuration -> OAuth/OpenID Connect Configuration.<br/>\n");
          out.write("                  </td></tr>\n");
          out.write("                   <tr>\n");
          out.write("                        <td >\n");
          out.write("                          <select style=\"min-width: 250px;\" id=\"scim-inbound-userstore\" name=\"scim-inbound-userstore\" ");
          out.print(appBean.getServiceProvider().getInboundProvisioningConfig().getDumbMode() ? "disabled" : "" );
          out.write(">\n");
          out.write("                          \t\t<option value=\"\">---Select---</option>\n");
          out.write("                                ");

                                    if(userStoreDomains != null && userStoreDomains.length > 0){
                                        for(String userStoreDomain : userStoreDomains){
                                            if(userStoreDomain != null){
                                            	if( appBean.getServiceProvider().getInboundProvisioningConfig() != null
                                                	&& appBean.getServiceProvider().getInboundProvisioningConfig().getProvisioningUserStore()!=null
                                                    && userStoreDomain.equals(appBean.getServiceProvider().getInboundProvisioningConfig().getProvisioningUserStore())) {
                                    
          out.write("\n");
          out.write("                                          \t\t\t<option selected=\"selected\" value=\"");
          out.print(Encode.forHtmlAttribute(userStoreDomain));
          out.write('"');
          out.write('>');
          out.print(Encode.forHtmlContent(userStoreDomain));
          out.write("</option>\n");
          out.write("                                    ");

                                      			} else {
                                    
          out.write("\n");
          out.write("                                           \t\t\t<option value=\"");
          out.print(Encode.forHtmlAttribute(userStoreDomain));
          out.write('"');
          out.write('>');
          out.print(Encode.forHtmlContent(userStoreDomain));
          out.write("</option>\n");
          out.write("                                    ");

                                                }
                                              }
                                           }
                                        }
                                    
          out.write("\n");
          out.write("                          </select>\n");
          out.write("                          <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f78(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    <tr>\n");
          out.write("                        <td>\n");
          out.write("                            <input type=\"checkbox\" name=\"dumb\" id=\"dumb\" value=\"false\" onclick =\"disable()\" ");
          out.print(appBean.getServiceProvider().getInboundProvisioningConfig().getDumbMode() ? "checked" : "" );
          out.write(">Enable Dumb Mode<br>\n");
          out.write("                            <div class=\"sectionHelp\">\n");
          out.write("                                ");
          if (_jspx_meth_fmt_005fmessage_005f79(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        </td>\n");
          out.write("                    </tr>\n");
          out.write("                    </table>\n");
          out.write("                </div>\n");
          out.write("            \n");
          out.write("            \n");
          out.write("            </div>\n");
          out.write("            \n");
          out.write("            <h2 id=\"outbound_provisioning_head\" class=\"sectionSeperator trigger active\">\n");
          out.write("                <a href=\"#\">");
          if (_jspx_meth_fmt_005fmessage_005f80(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("            </h2>\n");
          out.write("            <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"outboundProvisioning\">\n");
          out.write("             <table class=\"styledLeft\" width=\"100%\" id=\"fed_auth_table\">\n");
          out.write("            \n");
          out.write("\t\t      ");
 if (idpType != null && idpType.length() > 0) {
          out.write("\n");
          out.write("\t\t       <thead> \n");
          out.write("\t\t       \n");
          out.write("\t\t\t\t\t<tr>\n");
          out.write("\t\t\t\t\t\t<td>\t\t\t\t             \t  \n");
          out.write("\t\t\t\t\t\t\t <select name=\"provisioning_idps\" style=\"float: left; min-width: 150px;font-size:13px;\">\n");
          out.write("\t\t\t\t\t\t\t ");
          out.print(idpType.toString());
          out.write("\n");
          out.write("\t\t\t\t\t\t\t </select>\n");
          out.write("\t\t\t\t\t\t     <a id=\"provisioningIdpAdd\" onclick=\"addIDPRow(this);return false;\" class=\"icon-link\" style=\"background-image:url(images/add.gif);\"></a>\n");
          out.write("\t\t\t\t\t\t</td>\n");
          out.write("\t\t            </tr>\n");
          out.write("\t\t           \n");
          out.write("\t           </thead>\n");
          out.write("\t            ");
 } else { 
          out.write("\n");
          out.write("\t\t              <tr><td colspan=\"4\" style=\"border: none;\">There are no provisioning enabled identity providers defined in the system.</td></tr>\n");
          out.write("\t\t        ");
} 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t                 \n");
          out.write("\t           ");

	           	   if (appBean.getServiceProvider().getOutboundProvisioningConfig() != null) {
				   			IdentityProvider[] fedIdps = appBean.getServiceProvider().getOutboundProvisioningConfig().getProvisioningIdentityProviders();
							      if (fedIdps!=null && fedIdps.length>0){
							      			for(IdentityProvider idp:fedIdps) {
							      				if (idp != null) {
							      					boolean jitEnabled = false;
							      					boolean blocking = false;
							      					
							      					if (idp.getJustInTimeProvisioningConfig()!=null &&
							      							idp.getJustInTimeProvisioningConfig().getProvisioningEnabled())
							      					{
							      						jitEnabled = true;
							      					}
							      					if (idp.getDefaultProvisioningConnectorConfig()!=null &&
							      							idp.getDefaultProvisioningConnectorConfig().getBlocking())
							      					{
							      						blocking = true;
							      					}
							      						
	           
          out.write("\n");
          out.write("\t\t\t\t\t\t\t      \n");
          out.write("\t\t\t\t\t\t\t      \t       <tr>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t   <td>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t<input name=\"provisioning_idp\" id=\"\" type=\"hidden\" value=\"");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write("\" />\n");
          out.write("                                                    ");
          out.print(Encode.forHtmlContent(idp.getIdentityProviderName()) );
          out.write("\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t</td>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t<td> \n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t\t");
 if(selectedProIdpConnectors.get(idp.getIdentityProviderName()) != null) { 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t\t\t<select name=\"provisioning_con_idp_");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write("\" style=\"float: left; min-width: 150px;font-size:13px;\">");
          out.print(selectedProIdpConnectors.get(idp.getIdentityProviderName()));
          out.write("</select>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t\t");
 } 
          out.write("\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t</td>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t <td>\n");
          out.write("                            \t\t\t\t\t\t<div class=\"sectionCheckbox\">\n");
          out.write("                                \t\t\t\t\t\t<input type=\"checkbox\" id=\"blocking_prov_");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write("\" name=\"blocking_prov_");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write('"');
          out.write(' ');
          out.print(blocking ? "checked" : "" );
          out.write(">Blocking\n");
          out.write("                   \t\t\t\t\t\t\t\t\t</div>\n");
          out.write("                        \t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t <td>\n");
          out.write("                            \t\t\t\t\t\t<div class=\"sectionCheckbox\">\n");
          out.write("                                \t\t\t\t\t\t<input type=\"checkbox\" id=\"provisioning_jit_");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write("\" name=\"provisioning_jit_");
          out.print(Encode.forHtmlAttribute(idp.getIdentityProviderName()));
          out.write('"');
          out.write(' ');
          out.print(jitEnabled ? "checked" : "" );
          out.write(">Enable JIT\n");
          out.write("                   \t\t\t\t\t\t\t\t\t</div>\n");
          out.write("                        \t\t\t\t\t\t</td>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t<td class=\"leftCol-small\" >\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t<a onclick=\"deleteIDPRow(this);return false;\" href=\"#\" class=\"icon-link\" style=\"background-image: url(images/delete.gif)\"> Delete </a>\n");
          out.write("\t\t\t\t\t\t\t      \t      \t\t</td>\n");
          out.write("\t\t\t\t\t\t\t      \t       </tr>\t\t\t\t\t\t      \n");
          out.write("\t\t\t    ");

							      		}							      			
							      	}								      	
						  }
	           	    }
				
          out.write("\n");
          out.write("\t\t\t  </table>\n");
          out.write("            \n");
          out.write("            </div>          \n");
          out.write("\n");
          out.write("\t\t\t<div style=\"clear:both\"/>\n");
          out.write("            <!-- sectionSub Div -->\n");
          out.write("            <div class=\"buttonRow\">\n");
          out.write("                <input type=\"button\" value=\"");
          if (_jspx_meth_fmt_005fmessage_005f81(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\" onclick=\"createAppOnclick();\"/>\n");
          out.write("                <input type=\"button\" value=\"");
          if (_jspx_meth_fmt_005fmessage_005f82(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\" onclick=\"javascript:location.href='list-service-providers.jsp'\"/>\n");
          out.write("            </div>\n");
          out.write("            </form>\n");
          out.write("        </div>\n");
          out.write("    </div>\n");
          out.write("\n");
          int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        return;
      }
      _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f0.setParent(null);
    // /application/configure-service-provider.jsp(289,29) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f0.setKey("alert.please.provide.service.provider.id");
    int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f1.setParent(null);
    // /application/configure-service-provider.jsp(384,29) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f1.setKey("alert.please.provide.service.provider.id");
    int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f2.setParent(null);
    // /application/configure-service-provider.jsp(394,29) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f2.setKey("alert.please.provide.service.provider.id");
    int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f3.setParent(null);
    // /application/configure-service-provider.jsp(404,29) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f3.setKey("alert.please.provide.service.provider.id");
    int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f4.setParent(null);
    // /application/configure-service-provider.jsp(414,29) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f4.setKey("alert.please.provide.service.provider.id");
    int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(721,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f5.setKey("title.service.providers");
    int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(727,57) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f6.setKey("title.config.app.basic.config");
    int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(731,77) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f7.setKey("config.application.info.basic.name");
    int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(735,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f8.setKey("help.name");
    int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(744,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f9.setKey("help.desc");
    int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(750,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f10.setKey("config.application.isSaasApp");
    int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(756,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f11.setKey("help.saas");
    int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(765,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f12.setKey("title.config.app.claim");
    int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(771,23) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f13.setKey("config.application.claim.dialect.select");
    int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(774,203) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f14.setKey("config.application.claim.dialect.local");
    int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(781,209) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f15.setKey("config.application.claim.dialect.custom");
    int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(791,177) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f16.setKey("button.add.claim.mapping");
    int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(794,127) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f17.setKey("title.table.claim.sp.claim");
    int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(795,54) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f18.setKey("title.table.claim.idp.claim");
    int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(796,127) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f19.setKey("config.application.req.claim");
    int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(798,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f20.setKey("config.application.authz.permissions.action");
    int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(830,49) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f21.setKey("alert.info.delete.permission");
    int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(835,43) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f22.setKey("link.delete");
    int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(847,57) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f23.setKey("config.application.info.subject.claim.uri");
    int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(893,35) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f24.setKey("config.application.role.claim.uri");
    int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f25.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(916,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f25.setKey("help.role.claim");
    int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f26(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f26 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f26.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f26.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(925,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f26.setKey("title.config.app.authorization.permission");
    int _jspx_eval_fmt_005fmessage_005f26 = _jspx_th_fmt_005fmessage_005f26.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f27(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f27 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f27.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f27.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(935,132) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f27.setKey("button.add.permission");
    int _jspx_eval_fmt_005fmessage_005f27 = _jspx_th_fmt_005fmessage_005f27.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f27);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f27);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f28(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f28 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f28.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f28.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(938,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f28.setKey("help.permission.add");
    int _jspx_eval_fmt_005fmessage_005f28 = _jspx_th_fmt_005fmessage_005f28.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f28);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f28);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f29(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f29 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f29.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f29.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(953,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f29.setKey("alert.info.delete.permission");
    int _jspx_eval_fmt_005fmessage_005f29 = _jspx_th_fmt_005fmessage_005f29.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f29);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f29);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f30(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f30 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f30.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f30.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(958,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f30.setKey("link.delete");
    int _jspx_eval_fmt_005fmessage_005f30 = _jspx_th_fmt_005fmessage_005f30.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f30);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f30);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f31(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f31 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f31.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f31.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(980,113) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f31.setKey("button.add.role.mapping");
    int _jspx_eval_fmt_005fmessage_005f31 = _jspx_th_fmt_005fmessage_005f31.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f31.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f31);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f31);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f32(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f32 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f32.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f32.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(983,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f32.setKey("help.role.mapping");
    int _jspx_eval_fmt_005fmessage_005f32 = _jspx_th_fmt_005fmessage_005f32.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f32.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f32);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f32);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f33(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f33 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f33.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f33.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(989,65) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f33.setKey("title.table.role.idp.role");
    int _jspx_eval_fmt_005fmessage_005f33 = _jspx_th_fmt_005fmessage_005f33.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f33.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f33);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f33);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f34(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f34 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f34.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f34.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(989,140) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f34.setKey("title.table.role.sp.role");
    int _jspx_eval_fmt_005fmessage_005f34 = _jspx_th_fmt_005fmessage_005f34.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f34.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f34);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f34);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f35(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f35 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f35.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f35.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(989,194) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f35.setKey("config.application.authz.permissions.action");
    int _jspx_eval_fmt_005fmessage_005f35 = _jspx_th_fmt_005fmessage_005f35.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f35.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f35);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f35);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f36(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f36 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f36.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f36.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1006,49) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f36.setKey("alert.info.delete.rolemap");
    int _jspx_eval_fmt_005fmessage_005f36 = _jspx_th_fmt_005fmessage_005f36.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f36.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f36);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f36);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f37(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f37 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f37.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f37.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1011,43) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f37.setKey("link.delete");
    int _jspx_eval_fmt_005fmessage_005f37 = _jspx_th_fmt_005fmessage_005f37.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f37.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f37);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f37);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f38(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f38 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f38.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f38.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1024,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f38.setKey("title.config.app.authentication");
    int _jspx_eval_fmt_005fmessage_005f38 = _jspx_th_fmt_005fmessage_005f38.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f38.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f38);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f38);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f39(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f39 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f39.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f39.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1034,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f39.setKey("title.config.saml2.web.sso.config");
    int _jspx_eval_fmt_005fmessage_005f39 = _jspx_th_fmt_005fmessage_005f39.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f39.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f39);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f39);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f40(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f40 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f40.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f40.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1051,91) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f40.setKey("auth.configure");
    int _jspx_eval_fmt_005fmessage_005f40 = _jspx_th_fmt_005fmessage_005f40.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f40.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f40);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f40);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f41(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f41 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f41.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f41.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1058,67) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f41.setKey("title.table.saml.config.issuer");
    int _jspx_eval_fmt_005fmessage_005f41 = _jspx_th_fmt_005fmessage_005f41.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f41.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f41);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f41);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f42(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f42 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f42.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f42.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1058,147) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f42.setKey("application.info.saml2sso.acsi");
    int _jspx_eval_fmt_005fmessage_005f42 = _jspx_th_fmt_005fmessage_005f42.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f42.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f42);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f42);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f43(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f43 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f43.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f43.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1058,207) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f43.setKey("application.info.saml2sso.action");
    int _jspx_eval_fmt_005fmessage_005f43 = _jspx_th_fmt_005fmessage_005f43.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f43.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f43);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f43);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f44(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f44 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f44.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f44.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1088,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f44.setKey("title.config.oauth2.oidc.config");
    int _jspx_eval_fmt_005fmessage_005f44 = _jspx_th_fmt_005fmessage_005f44.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f44.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f44);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f44);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f45(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f45 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f45.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f45.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1105,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f45.setKey("auth.configure");
    int _jspx_eval_fmt_005fmessage_005f45 = _jspx_th_fmt_005fmessage_005f45.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f45.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f45);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f45);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f46(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f46 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f46.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f46.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1115,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f46.setKey("application.info.oauthoidc.action");
    int _jspx_eval_fmt_005fmessage_005f46 = _jspx_th_fmt_005fmessage_005f46.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f46.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f46);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f46);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f47(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f47 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f47.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f47.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1160,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f47.setKey("application.openid.realm");
    int _jspx_eval_fmt_005fmessage_005f47 = _jspx_th_fmt_005fmessage_005f47.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f47.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f47);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f47);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f48(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f48 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f48.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f48.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1171,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f48.setKey("help.openid");
    int _jspx_eval_fmt_005fmessage_005f48 = _jspx_th_fmt_005fmessage_005f48.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f48.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f48);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f48);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f49(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f49 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f49.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f49.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1190,22) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f49.setKey("application.passive.sts.realm");
    int _jspx_eval_fmt_005fmessage_005f49 = _jspx_th_fmt_005fmessage_005f49.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f49.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f49);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f49);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f50(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f50 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f50.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f50.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1201,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f50.setKey("help.passive.sts");
    int _jspx_eval_fmt_005fmessage_005f50 = _jspx_th_fmt_005fmessage_005f50.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f50.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f50);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f50);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f51(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f51 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f51.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f51.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1208,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f51.setKey("application.passive.sts.wreply");
    int _jspx_eval_fmt_005fmessage_005f51 = _jspx_th_fmt_005fmessage_005f51.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f51.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f51);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f51);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f52(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f52 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f52.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f52.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1219,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f52.setKey("help.passive.sts.wreply");
    int _jspx_eval_fmt_005fmessage_005f52 = _jspx_th_fmt_005fmessage_005f52.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f52.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f52);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f52);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f53(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f53 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f53.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f53.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1229,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f53.setKey("title.config.sts.config");
    int _jspx_eval_fmt_005fmessage_005f53 = _jspx_th_fmt_005fmessage_005f53.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f53.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f53);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f53);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f54(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f54 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f54.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f54.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1247,10) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f54.setKey("auth.configure");
    int _jspx_eval_fmt_005fmessage_005f54 = _jspx_th_fmt_005fmessage_005f54.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f54.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f54);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f54);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f55(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f55 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f55.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f55.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1253,62) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f55.setKey("application.info.oauthoidc.action");
    int _jspx_eval_fmt_005fmessage_005f55 = _jspx_th_fmt_005fmessage_005f55.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f55.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f55);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f55);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f56(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f56 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f56.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f56.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1297,79) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f56.setKey("auth.configure");
    int _jspx_eval_fmt_005fmessage_005f56 = _jspx_th_fmt_005fmessage_005f56.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f56.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f56);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f56);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f57(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f57 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f57.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f57.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1305,37) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f57.setKey("title.table.kerberos.config");
    int _jspx_eval_fmt_005fmessage_005f57 = _jspx_th_fmt_005fmessage_005f57.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f57.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f57);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f57);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f58(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f58 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f58.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f58.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1306,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f58.setKey("application.info.kerberos.action");
    int _jspx_eval_fmt_005fmessage_005f58 = _jspx_th_fmt_005fmessage_005f58.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f58.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f58);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f58);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f59(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f59 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f59.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f59.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1406,29) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f59.setKey("outbound.title.config.app.authentication.type");
    int _jspx_eval_fmt_005fmessage_005f59 = _jspx_th_fmt_005fmessage_005f59.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f59.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f59);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f59);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f60(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f60 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f60.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f60.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1415,57) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f60.setKey("config.application.info.authentication.advance.type");
    int _jspx_eval_fmt_005fmessage_005f60 = _jspx_th_fmt_005fmessage_005f60.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f60.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f60);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f60);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f61(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f61 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f61.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f61.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1419,146) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f61.setKey("config.authentication.type.default");
    int _jspx_eval_fmt_005fmessage_005f61 = _jspx_th_fmt_005fmessage_005f61.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f61.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f61);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f61);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f62(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f62 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f62.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f62.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1421,139) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f62.setKey("config.authentication.type.default");
    int _jspx_eval_fmt_005fmessage_005f62 = _jspx_th_fmt_005fmessage_005f62.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f62.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f62);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f62);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f63(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f63 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f63.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f63.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1430,140) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f63.setKey("config.authentication.type.local");
    int _jspx_eval_fmt_005fmessage_005f63 = _jspx_th_fmt_005fmessage_005f63.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f63.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f63);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f63);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f64(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f64 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f64.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f64.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1432,132) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f64.setKey("config.authentication.type.local");
    int _jspx_eval_fmt_005fmessage_005f64 = _jspx_th_fmt_005fmessage_005f64.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f64.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f64);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f64);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f65(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f65 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f65.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f65.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1459,152) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f65.setKey("config.authentication.type.federated");
    int _jspx_eval_fmt_005fmessage_005f65 = _jspx_th_fmt_005fmessage_005f65.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f65.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f65);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f65);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f66(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f66 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f66.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f66.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1461,144) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f66.setKey("config.authentication.type.federated");
    int _jspx_eval_fmt_005fmessage_005f66 = _jspx_th_fmt_005fmessage_005f66.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f66.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f66);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f66);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f67(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f67 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f67.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f67.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1485,141) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f67.setKey("config.authentication.type.federated");
    int _jspx_eval_fmt_005fmessage_005f67 = _jspx_th_fmt_005fmessage_005f67.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f67.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f67);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f67);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f68(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f68 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f68.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f68.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1494,274) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f68.setKey("config.authentication.type.flow");
    int _jspx_eval_fmt_005fmessage_005f68 = _jspx_th_fmt_005fmessage_005f68.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f68.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f68);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f68);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f69(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f69 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f69.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f69.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1496,265) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f69.setKey("config.authentication.type.flow");
    int _jspx_eval_fmt_005fmessage_005f69 = _jspx_th_fmt_005fmessage_005f69.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f69.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f69);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f69);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f70(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f70 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f70.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f70.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1504,235) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f70.setKey("config.application.claim.assert.local.select");
    int _jspx_eval_fmt_005fmessage_005f70 = _jspx_th_fmt_005fmessage_005f70.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f70.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f70);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f70);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f71(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f71 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f71.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f71.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1509,245) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f71.setKey("config.application.claim.always.auth.list");
    int _jspx_eval_fmt_005fmessage_005f71 = _jspx_th_fmt_005fmessage_005f71.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f71.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f71);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f71);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f72(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f72 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f72.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f72.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1516,79) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f72.setKey("config.application.use.tenant.domain.in.local.subject.identifier");
    int _jspx_eval_fmt_005fmessage_005f72 = _jspx_th_fmt_005fmessage_005f72.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f72.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f72);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f72);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f73(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f73 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f73.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f73.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1524,65) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f73.setKey("config.application.use.userstore.domain.in.local.subject.identifier");
    int _jspx_eval_fmt_005fmessage_005f73 = _jspx_th_fmt_005fmessage_005f73.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f73.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f73);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f73);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f74(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f74 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f74.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f74.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1532,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f74.setKey("title.req.config.authentication.steps");
    int _jspx_eval_fmt_005fmessage_005f74 = _jspx_th_fmt_005fmessage_005f74.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f74.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f74);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f74);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f75(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f75 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f75.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f75.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1543,33) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f75.setKey("help.local.authnticators");
    int _jspx_eval_fmt_005fmessage_005f75 = _jspx_th_fmt_005fmessage_005f75.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f75.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f75);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f75);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f76(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f76 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f76.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f76.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1578,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f76.setKey("inbound.provisioning.head");
    int _jspx_eval_fmt_005fmessage_005f76 = _jspx_th_fmt_005fmessage_005f76.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f76.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f76);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f76);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f77(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f77 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f77.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f77.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1583,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f77.setKey("scim.inbound.provisioning.head");
    int _jspx_eval_fmt_005fmessage_005f77 = _jspx_th_fmt_005fmessage_005f77.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f77.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f77);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f77);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f78(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f78 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f78.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f78.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1616,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f78.setKey("help.inbound.scim");
    int _jspx_eval_fmt_005fmessage_005f78 = _jspx_th_fmt_005fmessage_005f78.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f78.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f78);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f78);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f79(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f79 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f79.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f79.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1624,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f79.setKey("help.inbound.scim.dumb");
    int _jspx_eval_fmt_005fmessage_005f79 = _jspx_th_fmt_005fmessage_005f79.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f79.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f79);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f79);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f80(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f80 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f80.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f80.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1635,28) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f80.setKey("outbound.provisioning.head");
    int _jspx_eval_fmt_005fmessage_005f80 = _jspx_th_fmt_005fmessage_005f80.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f80.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f80);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f80);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f81(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f81 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f81.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f81.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1716,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f81.setKey("button.update.service.provider");
    int _jspx_eval_fmt_005fmessage_005f81 = _jspx_th_fmt_005fmessage_005f81.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f81.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f81);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f81);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f82(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f82 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f82.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f82.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /application/configure-service-provider.jsp(1717,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f82.setKey("button.cancel");
    int _jspx_eval_fmt_005fmessage_005f82 = _jspx_th_fmt_005fmessage_005f82.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f82.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f82);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f82);
    return false;
  }
}
